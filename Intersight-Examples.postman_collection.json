{
	"info": {
		"_postman_id": "7da20eda-f825-47f7-b39b-b279793325e7",
		"name": "Intersight-Examples",
		"description": "## Cisco Intersight Postman Collection\n\nThe Cisco Intersight Postman Collection provides a subset of all Intersight calls. Cisco Intersight is based on the OpenAPI specification and as such a Postman collection can be created directly from the OpenAPI specification.\n\nHowever the OpenAPI specification does not provide the pre-requestion operation of siging the request.  A request signed with the user's API Key ID and their Secret Key is needed to authenticate the request.  Additionally, the pre-request script pre-processes the Body and URL Postman variable prior to signing the request.\n\nThe pre-request script requires two variables, that must be in the current Postman environment and named exactly as follows;\n\n**api-key** - which is available in the Intersight Web interafce after a successful API Key creation.\n**secret-key** - which is the complete text of the SecretKet.txt file that is downloaded after a successful API Key creation.\n\nWith defined API Key environment variables the provided calls will work within the limits of your Intersight account. With respect to licensing and account capabilities.\n\nThe collection also contains some basic test that determine the success or failure of the request and is the request completed in a certain amount of time.\n\nSeveral of the requests contain post-request tests to perform various activities\n\n- Update the Postman console\n- Set Environment variables\n- Unset Environment variables\n\nCisco DevNet provides several Learning Labs and an Inersight Sandbox to get you started using these Postman Calls.\n\n## Cisco DevNet resources\n\n- [Cisco Intersight DevNet Learning Labs ](https://developer.cisco.com/learning/modules/intersight-rest-api)\n\n- [Cisco Intersight DevNet Sandbox](https://devnetsandbox.cisco.com/RM/Diagram/Index/a63216d2-e891-4856-9f27-309ca61ec862?diagramType=Topology)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Advisories",
			"item": [
				{
					"name": "Get Advisory Instances (Detailed)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://intersight.com/api/v1/tam/AdvisoryInstances?$expand=Advisory,AffectedObject",
							"protocol": "https",
							"host": [
								"intersight",
								"com"
							],
							"path": [
								"api",
								"v1",
								"tam",
								"AdvisoryInstances"
							],
							"query": [
								{
									"key": "$filter",
									"value": "PermissionResources",
									"description": "Filter criteria for the resources to return.\nA URI with a $filter query option identifies a subset of the entries from the Collection of Entries. The subset is determined by selecting\nonly the Entries that satisfy the predicate expression specified by the $filter option.\nThe expression language that is used in $filter queries supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false).",
									"disabled": true
								},
								{
									"key": "$orderby",
									"value": "<string>",
									"description": "Determines what properties are used to sort the collection of resources.",
									"disabled": true
								},
								{
									"key": "$top",
									"value": "100",
									"description": "Specifies the maximum number of resources to return in the response.",
									"disabled": true
								},
								{
									"key": "$skip",
									"value": "0",
									"description": "Specifies the number of resources to skip in the response.",
									"disabled": true
								},
								{
									"key": "$select",
									"value": "Owners",
									"description": "Specifies a subset of properties to return.",
									"disabled": true
								},
								{
									"key": "$expand",
									"value": "Advisory,AffectedObject",
									"description": "Specify additional attributes or related resources to return in addition to the primary resources."
								},
								{
									"key": "$apply",
									"value": "groupby((Advisory/Moid), aggregate($count as AffectedObjects))",
									"description": "Specify one or more transformation operations to perform aggregation on the resources. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent transformation.\nThe \"$apply\" query takes a sequence of set transformations, separated by forward slashes to express that they are\nconsecutively applied, i.e. the result of each transformation is the input to the next transformation.\nSupported aggregation methods are \"aggregate\" and \"groupby\".\nThe **aggregate** transformation takes a comma-separated list of one or more aggregate expressions as parameters and returns\na result set with a single instance, representing the aggregated value for all instances in the input set.\nThe **groupby** transformation takes one or two parameters and\n1. Splits the initial set into subsets where all instances in a subset have the same values for the grouping properties specified in the first parameter,\n2. Applies set transformations to each subset according to the second parameter, resulting in a new set of potentially different structure and cardinality,\n3. Ensures that the instances in the result set contain all grouping properties with the correct values for the group,\n4. Concatenates the intermediate result sets into one result set.\nA groupby transformation affects the structure of the result set.",
									"disabled": true
								},
								{
									"key": "$count",
									"value": "true",
									"description": "The $count query specifies the service should return the count of the matching resources, instead of returning the resources.",
									"disabled": true
								},
								{
									"key": "$inlinecount",
									"value": "allpages",
									"description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response.",
									"disabled": true
								},
								{
									"key": "at",
									"value": "<string>",
									"description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for resources to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.",
									"disabled": true
								},
								{
									"key": "tags",
									"value": "<string>",
									"description": "The 'tags' parameter is used to request a summary of the Tag utilization for this resource. When the 'tags' parameter is specified, the response provides a list of tag keys, the number of times the key has been used across all documents, and the tag values that have been assigned to the tag key.",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "The request could not be understood by the server due to malformed syntax.\nThe client SHOULD NOT repeat the request without modifications.\nFor example, the request may contain an incorrect JSON syntax, or the request fails\nvalidation checks.\nThe HTTP body",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/tam/AdvisoryInstances?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"tam",
										"AdvisoryInstances"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "The request requires user authentication. The client may repeat the request with a suitable Authorization header field.\nIf the request already included Authorization credentials, then the 401 response indicates that authorization has\nbeen refused for thos",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/tam/AdvisoryInstances?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"tam",
										"AdvisoryInstances"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "List of 'tam.AdvisoryInstance' resources for the given filter criteria",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/tam/AdvisoryInstances?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"tam",
										"AdvisoryInstances"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Set-Cookie",
									"value": "X-Starship-Token=abcde12345; Path=/",
									"description": "Cookie authentication key for use with the `cookieAuth` apiKey authentication."
								},
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Disposition",
									"value": "<string>",
									"description": "If not present, indicates the response content is expected to be displayed inline in the browser, that is, as a Web page or as part of a Web page. If present, indicates the response content is expected to be an attachment, that is downloaded and saved locally."
								},
								{
									"key": "Content-Length",
									"value": "<integer>",
									"description": "Indicates the size of the entity-body, in bytes, sent to the recipient."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"ObjectType\": \"tempor sunt\",\n \"Count\": 71008981\n}"
						},
						{
							"name": "An unexpected error occurred.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/tam/AdvisoryInstances?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"tam",
										"AdvisoryInstances"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "The request was properly authenticated, but the server is refusing to fulfill it.\nThe HTTP body may contain a document that provides more details about the error.\nFor example, the user may not have sufficient privileges to perform the request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/tam/AdvisoryInstances?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"tam",
										"AdvisoryInstances"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "The specified resource was not found. The HTTP body contains a document that provides more details about the error.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/tam/AdvisoryInstances?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"tam",
										"AdvisoryInstances"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						}
					]
				},
				{
					"name": "Get Advisory Instances (Count)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://intersight.com/api/v1/tam/AdvisoryInstances?$apply=groupby((Advisory/Moid), aggregate($count as AffectedObjects))&$count=true",
							"protocol": "https",
							"host": [
								"intersight",
								"com"
							],
							"path": [
								"api",
								"v1",
								"tam",
								"AdvisoryInstances"
							],
							"query": [
								{
									"key": "$filter",
									"value": "",
									"description": "Filter criteria for the resources to return.\nA URI with a $filter query option identifies a subset of the entries from the Collection of Entries. The subset is determined by selecting\nonly the Entries that satisfy the predicate expression specified by the $filter option.\nThe expression language that is used in $filter queries supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false).",
									"disabled": true
								},
								{
									"key": "$orderby",
									"value": "<string>",
									"description": "Determines what properties are used to sort the collection of resources.",
									"disabled": true
								},
								{
									"key": "$top",
									"value": "100",
									"description": "Specifies the maximum number of resources to return in the response.",
									"disabled": true
								},
								{
									"key": "$skip",
									"value": "0",
									"description": "Specifies the number of resources to skip in the response.",
									"disabled": true
								},
								{
									"key": "$select",
									"value": "",
									"description": "Specifies a subset of properties to return.",
									"disabled": true
								},
								{
									"key": "$expand",
									"value": "<string>",
									"description": "Specify additional attributes or related resources to return in addition to the primary resources.",
									"disabled": true
								},
								{
									"key": "$apply",
									"value": "groupby((Advisory/Moid), aggregate($count as AffectedObjects))",
									"description": "Specify one or more transformation operations to perform aggregation on the resources. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent transformation.\nThe \"$apply\" query takes a sequence of set transformations, separated by forward slashes to express that they are\nconsecutively applied, i.e. the result of each transformation is the input to the next transformation.\nSupported aggregation methods are \"aggregate\" and \"groupby\".\nThe **aggregate** transformation takes a comma-separated list of one or more aggregate expressions as parameters and returns\na result set with a single instance, representing the aggregated value for all instances in the input set.\nThe **groupby** transformation takes one or two parameters and\n1. Splits the initial set into subsets where all instances in a subset have the same values for the grouping properties specified in the first parameter,\n2. Applies set transformations to each subset according to the second parameter, resulting in a new set of potentially different structure and cardinality,\n3. Ensures that the instances in the result set contain all grouping properties with the correct values for the group,\n4. Concatenates the intermediate result sets into one result set.\nA groupby transformation affects the structure of the result set."
								},
								{
									"key": "$count",
									"value": "true",
									"description": "The $count query specifies the service should return the count of the matching resources, instead of returning the resources."
								},
								{
									"key": "$inlinecount",
									"value": "allpages",
									"description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response.",
									"disabled": true
								},
								{
									"key": "at",
									"value": "<string>",
									"description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for resources to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.",
									"disabled": true
								},
								{
									"key": "tags",
									"value": "<string>",
									"description": "The 'tags' parameter is used to request a summary of the Tag utilization for this resource. When the 'tags' parameter is specified, the response provides a list of tag keys, the number of times the key has been used across all documents, and the tag values that have been assigned to the tag key.",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "The request requires user authentication. The client may repeat the request with a suitable Authorization header field.\nIf the request already included Authorization credentials, then the 401 response indicates that authorization has\nbeen refused for thos",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/tam/AdvisoryInstances?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"tam",
										"AdvisoryInstances"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "The request could not be understood by the server due to malformed syntax.\nThe client SHOULD NOT repeat the request without modifications.\nFor example, the request may contain an incorrect JSON syntax, or the request fails\nvalidation checks.\nThe HTTP body",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/tam/AdvisoryInstances?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"tam",
										"AdvisoryInstances"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "An unexpected error occurred.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/tam/AdvisoryInstances?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"tam",
										"AdvisoryInstances"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "The request was properly authenticated, but the server is refusing to fulfill it.\nThe HTTP body may contain a document that provides more details about the error.\nFor example, the user may not have sufficient privileges to perform the request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/tam/AdvisoryInstances?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"tam",
										"AdvisoryInstances"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "The specified resource was not found. The HTTP body contains a document that provides more details about the error.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/tam/AdvisoryInstances?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"tam",
										"AdvisoryInstances"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "List of 'tam.AdvisoryInstance' resources for the given filter criteria",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/tam/AdvisoryInstances?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"tam",
										"AdvisoryInstances"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Set-Cookie",
									"value": "X-Starship-Token=abcde12345; Path=/",
									"description": "Cookie authentication key for use with the `cookieAuth` apiKey authentication."
								},
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Disposition",
									"value": "<string>",
									"description": "If not present, indicates the response content is expected to be displayed inline in the browser, that is, as a Web page or as part of a Web page. If present, indicates the response content is expected to be an attachment, that is downloaded and saved locally."
								},
								{
									"key": "Content-Length",
									"value": "<integer>",
									"description": "Indicates the size of the entity-body, in bytes, sent to the recipient."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"ObjectType\": \"tempor sunt\",\n \"Count\": 71008981\n}"
						}
					]
				}
			]
		},
		{
			"name": "Device Claiming",
			"item": [
				{
					"name": "Device Claim",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"SecurityToken\": \"{{security-token}}\",\n  \"SerialNumber\": \"{{serial-number}}\"\n}"
						},
						"url": {
							"raw": "https://intersight.com/api/v1/asset/DeviceClaims",
							"protocol": "https",
							"host": [
								"intersight",
								"com"
							],
							"path": [
								"api",
								"v1",
								"asset",
								"DeviceClaims"
							]
						}
					},
					"response": []
				}
			],
			"description": "Use this call to claim a device"
		},
		{
			"name": "Api Key Managment",
			"item": [
				{
					"name": "API Key Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var respJsonData = JSON.parse(responseBody)",
									"",
									"if (respJsonData.Moid) {",
									"  pm.collectionVariables.set(\"api-key\", respJsonData.Moid)",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"Purpose\": \"API Key Create\"\n}"
						},
						"url": {
							"raw": "https://intersight.com/api/v1/iam/ApiKeys",
							"protocol": "https",
							"host": [
								"intersight",
								"com"
							],
							"path": [
								"api",
								"v1",
								"iam",
								"ApiKeys"
							]
						}
					},
					"response": []
				},
				{
					"name": "API Key Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.unset(\"api-key\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://intersight.com/api/v1/iam/ApiKeys/{{api-key}}",
							"protocol": "https",
							"host": [
								"intersight",
								"com"
							],
							"path": [
								"api",
								"v1",
								"iam",
								"ApiKeys",
								"{{api-key}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "API Key Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"Purpose\": \"API Key Update\"\n}"
						},
						"url": {
							"raw": "https://intersight.com/api/v1/iam/ApiKeys/{{api-key}}",
							"protocol": "https",
							"host": [
								"intersight",
								"com"
							],
							"path": [
								"api",
								"v1",
								"iam",
								"ApiKeys",
								"{{api-key}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Use these calls to manage Intersight API Keys"
		},
		{
			"name": "Alarms",
			"item": [
				{
					"name": "Get Alarms",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{server}}/api/v1/cond/Alarms?$filter=Severity eq Critical&$count=true",
							"protocol": "https",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"cond",
								"Alarms"
							],
							"query": [
								{
									"key": "$filter",
									"value": "Severity eq Critical",
									"description": "Filter criteria for the resources to return.\nA URI with a $filter query option identifies a subset of the entries from the Collection of Entries. The subset is determined by selecting\nonly the Entries that satisfy the predicate expression specified by the $filter option.\nThe expression language that is used in $filter queries supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false)."
								},
								{
									"key": "$orderby",
									"value": "<string>",
									"description": "Determines what properties are used to sort the collection of resources.",
									"disabled": true
								},
								{
									"key": "$top",
									"value": "100",
									"description": "Specifies the maximum number of resources to return in the response.",
									"disabled": true
								},
								{
									"key": "$skip",
									"value": "0",
									"description": "Specifies the number of resources to skip in the response.",
									"disabled": true
								},
								{
									"key": "$select",
									"value": "",
									"description": "Specifies a subset of properties to return.",
									"disabled": true
								},
								{
									"key": "$expand",
									"value": "<string>",
									"description": "Specify additional attributes or related resources to return in addition to the primary resources.",
									"disabled": true
								},
								{
									"key": "$apply",
									"value": "<string>",
									"description": "Specify one or more transformation operations to perform aggregation on the resources. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent transformation.\nThe \"$apply\" query takes a sequence of set transformations, separated by forward slashes to express that they are\nconsecutively applied, i.e. the result of each transformation is the input to the next transformation.\nSupported aggregation methods are \"aggregate\" and \"groupby\".\nThe **aggregate** transformation takes a comma-separated list of one or more aggregate expressions as parameters and returns\na result set with a single instance, representing the aggregated value for all instances in the input set.\nThe **groupby** transformation takes one or two parameters and\n1. Splits the initial set into subsets where all instances in a subset have the same values for the grouping properties specified in the first parameter,\n2. Applies set transformations to each subset according to the second parameter, resulting in a new set of potentially different structure and cardinality,\n3. Ensures that the instances in the result set contain all grouping properties with the correct values for the group,\n4. Concatenates the intermediate result sets into one result set.\nA groupby transformation affects the structure of the result set.",
									"disabled": true
								},
								{
									"key": "$count",
									"value": "true",
									"description": "The $count query specifies the service should return the count of the matching resources, instead of returning the resources."
								},
								{
									"key": "$inlinecount",
									"value": "allpages",
									"description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response.",
									"disabled": true
								},
								{
									"key": "at",
									"value": "<string>",
									"description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for resources to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.",
									"disabled": true
								},
								{
									"key": "tags",
									"value": "<string>",
									"description": "The 'tags' parameter is used to request a summary of the Tag utilization for this resource. When the 'tags' parameter is specified, the response provides a list of tag keys, the number of times the key has been used across all documents, and the tag values that have been assigned to the tag key.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "server",
									"value": "{{server}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "The request requires user authentication. The client may repeat the request with a suitable Authorization header field.\nIf the request already included Authorization credentials, then the 401 response indicates that authorization has\nbeen refused for thos",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/cond/Alarms?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"cond",
										"Alarms"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "The specified resource was not found. The HTTP body contains a document that provides more details about the error.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/cond/Alarms?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"cond",
										"Alarms"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "The request could not be understood by the server due to malformed syntax.\nThe client SHOULD NOT repeat the request without modifications.\nFor example, the request may contain an incorrect JSON syntax, or the request fails\nvalidation checks.\nThe HTTP body",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/cond/Alarms?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"cond",
										"Alarms"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "List of 'cond.Alarm' resources for the given filter criteria",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/cond/Alarms?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"cond",
										"Alarms"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Set-Cookie",
									"value": "X-Starship-Token=abcde12345; Path=/",
									"description": "Cookie authentication key for use with the `cookieAuth` apiKey authentication."
								},
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Disposition",
									"value": "<string>",
									"description": "If not present, indicates the response content is expected to be displayed inline in the browser, that is, as a Web page or as part of a Web page. If present, indicates the response content is expected to be an attachment, that is downloaded and saved locally."
								},
								{
									"key": "Content-Length",
									"value": "<integer>",
									"description": "Indicates the size of the entity-body, in bytes, sent to the recipient."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"ObjectType\": \"tempor sunt\",\n \"Count\": 71008981\n}"
						},
						{
							"name": "An unexpected error occurred.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/cond/Alarms?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"cond",
										"Alarms"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "The request was properly authenticated, but the server is refusing to fulfill it.\nThe HTTP body may contain a document that provides more details about the error.\nFor example, the user may not have sufficient privileges to perform the request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/cond/Alarms?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"cond",
										"Alarms"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Search Servers",
			"item": [
				{
					"name": "Get Rack Servers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{server}}/api/v1/compute/RackUnits?$filter=contains('Model', 'C220-M4') and Tags/any(t:t/Key eq 'location' and t/Value eq 'austin')",
							"protocol": "https",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"compute",
								"RackUnits"
							],
							"query": [
								{
									"key": "$filter",
									"value": "",
									"description": "Filter criteria for the resources to return.\nA URI with a $filter query option identifies a subset of the entries from the Collection of Entries. The subset is determined by selecting\nonly the Entries that satisfy the predicate expression specified by the $filter option.\nThe expression language that is used in $filter queries supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false).",
									"disabled": true
								},
								{
									"key": "$orderby",
									"value": "<string>",
									"description": "Determines what properties are used to sort the collection of resources.",
									"disabled": true
								},
								{
									"key": "$top",
									"value": "100",
									"description": "Specifies the maximum number of resources to return in the response.",
									"disabled": true
								},
								{
									"key": "$skip",
									"value": "0",
									"description": "Specifies the number of resources to skip in the response.",
									"disabled": true
								},
								{
									"key": "$expand",
									"value": "<string>",
									"description": "Specify additional attributes or related resources to return in addition to the primary resources.",
									"disabled": true
								},
								{
									"key": "$apply",
									"value": "<string>",
									"description": "Specify one or more transformation operations to perform aggregation on the resources. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent transformation.\nThe \"$apply\" query takes a sequence of set transformations, separated by forward slashes to express that they are\nconsecutively applied, i.e. the result of each transformation is the input to the next transformation.\nSupported aggregation methods are \"aggregate\" and \"groupby\".\nThe **aggregate** transformation takes a comma-separated list of one or more aggregate expressions as parameters and returns\na result set with a single instance, representing the aggregated value for all instances in the input set.\nThe **groupby** transformation takes one or two parameters and\n1. Splits the initial set into subsets where all instances in a subset have the same values for the grouping properties specified in the first parameter,\n2. Applies set transformations to each subset according to the second parameter, resulting in a new set of potentially different structure and cardinality,\n3. Ensures that the instances in the result set contain all grouping properties with the correct values for the group,\n4. Concatenates the intermediate result sets into one result set.\nA groupby transformation affects the structure of the result set.",
									"disabled": true
								},
								{
									"key": "$count",
									"value": "<boolean>",
									"description": "The $count query specifies the service should return the count of the matching resources, instead of returning the resources.",
									"disabled": true
								},
								{
									"key": "$inlinecount",
									"value": "allpages",
									"description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response.",
									"disabled": true
								},
								{
									"key": "at",
									"value": "<string>",
									"description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for resources to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.",
									"disabled": true
								},
								{
									"key": "tags",
									"value": "<string>",
									"description": "The 'tags' parameter is used to request a summary of the Tag utilization for this resource. When the 'tags' parameter is specified, the response provides a list of tag keys, the number of times the key has been used across all documents, and the tag values that have been assigned to the tag key.",
									"disabled": true
								},
								{
									"key": "$filter",
									"value": "contains('Model', 'C220-M4') and Tags/any(t:t/Key eq 'location' and t/Value eq 'austin')"
								}
							]
						}
					},
					"response": [
						{
							"name": "The request could not be understood by the server due to malformed syntax.\nThe client SHOULD NOT repeat the request without modifications.\nFor example, the request may contain an incorrect JSON syntax, or the request fails\nvalidation checks.\nThe HTTP body",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/compute/RackUnits?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"compute",
										"RackUnits"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "The request was properly authenticated, but the server is refusing to fulfill it.\nThe HTTP body may contain a document that provides more details about the error.\nFor example, the user may not have sufficient privileges to perform the request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/compute/RackUnits?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"compute",
										"RackUnits"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "The specified resource was not found. The HTTP body contains a document that provides more details about the error.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/compute/RackUnits?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"compute",
										"RackUnits"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "List of 'compute.RackUnit' resources for the given filter criteria",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/compute/RackUnits?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"compute",
										"RackUnits"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Set-Cookie",
									"value": "X-Starship-Token=abcde12345; Path=/",
									"description": "Cookie authentication key for use with the `cookieAuth` apiKey authentication."
								},
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Disposition",
									"value": "<string>",
									"description": "If not present, indicates the response content is expected to be displayed inline in the browser, that is, as a Web page or as part of a Web page. If present, indicates the response content is expected to be an attachment, that is downloaded and saved locally."
								},
								{
									"key": "Content-Length",
									"value": "<integer>",
									"description": "Indicates the size of the entity-body, in bytes, sent to the recipient."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"ObjectType\": \"tempor sunt\",\n \"Count\": 71008981\n}"
						},
						{
							"name": "An unexpected error occurred.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/compute/RackUnits?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"compute",
										"RackUnits"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "The request requires user authentication. The client may repeat the request with a suitable Authorization header field.\nIf the request already included Authorization credentials, then the 401 response indicates that authorization has\nbeen refused for thos",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/compute/RackUnits?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"compute",
										"RackUnits"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						}
					]
				},
				{
					"name": "Get Specific Rack Server",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{server}}/api/v1/compute/RackUnits/:Moid",
							"protocol": "https",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"compute",
								"RackUnits",
								":Moid"
							],
							"variable": [
								{
									"key": "Moid",
									"value": "<string>",
									"description": "(Required) The unique Moid identifier of a resource instance."
								}
							]
						}
					},
					"response": [
						{
							"name": "The specified resource was not found. The HTTP body contains a document that provides more details about the error.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/compute/RackUnits/:Moid",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"compute",
										"RackUnits",
										":Moid"
									],
									"variable": [
										{
											"key": "Moid"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "An unexpected error occurred.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/compute/RackUnits/:Moid",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"compute",
										"RackUnits",
										":Moid"
									],
									"variable": [
										{
											"key": "Moid"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "The request could not be understood by the server due to malformed syntax.\nThe client SHOULD NOT repeat the request without modifications.\nFor example, the request may contain an incorrect JSON syntax, or the request fails\nvalidation checks.\nThe HTTP body",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/compute/RackUnits/:Moid",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"compute",
										"RackUnits",
										":Moid"
									],
									"variable": [
										{
											"key": "Moid"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "The request requires user authentication. The client may repeat the request with a suitable Authorization header field.\nIf the request already included Authorization credentials, then the 401 response indicates that authorization has\nbeen refused for thos",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/compute/RackUnits/:Moid",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"compute",
										"RackUnits",
										":Moid"
									],
									"variable": [
										{
											"key": "Moid"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "The request was properly authenticated, but the server is refusing to fulfill it.\nThe HTTP body may contain a document that provides more details about the error.\nFor example, the user may not have sufficient privileges to perform the request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/compute/RackUnits/:Moid",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"compute",
										"RackUnits",
										":Moid"
									],
									"variable": [
										{
											"key": "Moid"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "An instance of the 'compute.RackUnit' resource.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/compute/RackUnits/:Moid",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"compute",
										"RackUnits",
										":Moid"
									],
									"variable": [
										{
											"key": "Moid"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Set-Cookie",
									"value": "X-Starship-Token=abcde12345; Path=/",
									"description": "Cookie authentication key for use with the `cookieAuth` apiKey authentication."
								},
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Disposition",
									"value": "<string>",
									"description": "If not present, indicates the response content is expected to be displayed inline in the browser, that is, as a Web page or as part of a Web page. If present, indicates the response content is expected to be an attachment, that is downloaded and saved locally."
								},
								{
									"key": "Content-Length",
									"value": "<integer>",
									"description": "Indicates the size of the entity-body, in bytes, sent to the recipient."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"AccountMoid\": \"nisi sed in non\",\n \"ClassId\": \"Excepteur cupidatat quis dolore\",\n \"CreateTime\": \"incididunt volupta\",\n \"DomainGroupMoid\": \"Lorem et ipsum amet\",\n \"ModTime\": \"sit culpa incididunt Lorem\",\n \"Moid\": \"voluptate magna cillum\",\n \"ObjectType\": \"in sit irure esse\",\n \"Owners\": [\n  \"adipisicing nostrud qui ut Duis\",\n  \"occaecat \"\n ],\n \"SharedScope\": \"Excepteur commodo occaecat\",\n \"Tags\": [\n  {\n   \"Key\": \"cill\",\n   \"Value\": \"labo\"\n  },\n  {\n   \"Key\": \"moll\",\n   \"Value\": \"dolo\"\n  }\n ],\n \"VersionContext\": {\n  \"ClassId\": \"in est sed\",\n  \"ObjectType\": \"anim proident n\",\n  \"InterestedMos\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ],\n  \"RefMo\": {},\n  \"Timestamp\": \"ut in\",\n  \"Version\": \"eiusmod lab\",\n  \"VersionType\": \"Modified\"\n },\n \"Ancestors\": [\n  null,\n  null\n ],\n \"Parent\": null,\n \"PermissionResources\": [\n  null,\n  null\n ],\n \"DisplayNames\": \"Lorem \",\n \"DeviceMoId\": \"sit veniam\",\n \"Dn\": \"do officia amet\",\n \"Rn\": \"nostrud non commod\",\n \"Model\": \"adipisicing Excepteur esse\",\n \"Revision\": \"do ad amet dolor\",\n \"Serial\": \"dolore non est Lorem\",\n \"Vendor\": \"anim ut\",\n \"AdminPowerState\": \"eu reprehenderit quis ut\",\n \"AlarmSummary\": {\n  \"ClassId\": \"ullamco exercitation in\",\n  \"ObjectType\": \"Excepteur dolor dolor ullamco\",\n  \"Critical\": 32399229,\n  \"Warning\": -78874932\n },\n \"AssetTag\": \"enim in laboris sed\",\n \"AvailableMemory\": 23883833,\n \"BiosPostComplete\": true,\n \"FaultSummary\": 96634565,\n \"KvmIpAddresses\": [\n  {\n   \"ClassId\": \"dolor anim ad\",\n   \"ObjectType\": \"anim aliqua exercitation occaecat sit\",\n   \"Address\": \"laborum\",\n   \"Category\": \"Equipment\",\n   \"DefaultGateway\": \"nisi do aute cupidatat\",\n   \"Dn\": \"et\",\n   \"HttpPort\": 95709841,\n   \"HttpsPort\": -99536977,\n   \"KvmPort\": -34512049,\n   \"KvmVlan\": 80985771,\n   \"Name\": \"Outband\",\n   \"Subnet\": \"Ut Duis ipsum dolore\",\n   \"Type\": \"MgmtInterface\"\n  },\n  {\n   \"ClassId\": \"aliq\",\n   \"ObjectType\": \"irure Duis\",\n   \"Address\": \"id\",\n   \"Category\": \"Equipment\",\n   \"DefaultGateway\": \"anim nulla laboris\",\n   \"Dn\": \"ullamco nostrud et velit\",\n   \"HttpPort\": -99939030,\n   \"HttpsPort\": 56146270,\n   \"KvmPort\": -12787160,\n   \"KvmVlan\": -31243958,\n   \"Name\": \"Outband\",\n   \"Subnet\": \"Excepteur Duis eu eiusmod\",\n   \"Type\": \"MgmtInterface\"\n  }\n ],\n \"ManagementMode\": \"IntersightStandalone\",\n \"MemorySpeed\": \"dolore magna nostrud\",\n \"MgmtIpAddress\": \"esse dolore\",\n \"NumAdaptors\": 92021775,\n \"NumCpuCores\": 561210,\n \"NumCpuCoresEnabled\": 36679886,\n \"NumCpus\": 81725502,\n \"NumEthHostInterfaces\": -91530960,\n \"NumFcHostInterfaces\": 65574979,\n \"NumThreads\": -46475269,\n \"OperPowerState\": \"Ut culpa quis qui in\",\n \"OperState\": \"fugiat ut\",\n \"Operability\": \"ex nulla laboris ea commodo\",\n \"PlatformType\": \"est sed consequat commodo\",\n \"Presence\": \"magna Lorem ipsum\",\n \"ServiceProfile\": \"labore ipsum minim\",\n \"TotalMemory\": -3640972,\n \"UserLabel\": \"sit Ut anim elit\",\n \"Uuid\": \"deserunt nisi tempor magna\",\n \"MgmtIdentity\": null,\n \"ConnectionStatus\": \"id ex ullamco\",\n \"ServerId\": -58158029,\n \"TopologyScanStatus\": \"sint magna Duis culpa ex\",\n \"Adapters\": [\n  null,\n  null\n ],\n \"BiosBootmode\": null,\n \"Biosunits\": [\n  null,\n  null\n ],\n \"Bmc\": null,\n \"Board\": null,\n \"BootDeviceBootmode\": null,\n \"Fanmodules\": [\n  null,\n  null\n ],\n \"GenericInventoryHolders\": [\n  null,\n  null\n ],\n \"GraphicsCards\": [\n  null,\n  null\n ],\n \"InventoryDeviceInfo\": null,\n \"LocatorLed\": null,\n \"MemoryArrays\": [\n  null,\n  null\n ],\n \"PciDevices\": [\n  null,\n  null\n ],\n \"Processors\": [\n  null,\n  null\n ],\n \"Psus\": [\n  null,\n  null\n ],\n \"RackEnclosureSlot\": null,\n \"RegisteredDevice\": null,\n \"SasExpanders\": [\n  null,\n  null\n ],\n \"StorageControllers\": [\n  null,\n  null\n ],\n \"StorageEnclosures\": [\n  null,\n  null\n ],\n \"TopSystem\": null\n}"
						}
					]
				}
			]
		},
		{
			"name": "Create and Assign NTP Policy",
			"item": [
				{
					"name": "Get Organization",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (responseBody.length > 0) {",
									"  var jsonData = JSON.parse(responseBody);",
									"  var moids = [];",
									"  jsonData.Results.forEach(result => {",
									"      moids.push(result.Moid);",
									"  })",
									"  pm.collectionVariables.set('org-moid', `${moids[0]}`);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{server}}/api/v1/organization/Organizations?$filter=Name eq default",
							"protocol": "https",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization",
								"Organizations"
							],
							"query": [
								{
									"key": "$filter",
									"value": "Name eq default"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create NTP Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (responseBody.length > 0) {",
									"  var jsonData = JSON.parse(responseBody);",
									"  ",
									"  pm.collectionVariables.set('server-ntp-policy', jsonData.Moid);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "For methods that apply server-side changes, and in particular for PUT, If-Match can be used to prevent\nthe lost update problem. It can check if the modification of a resource that the user wants to upload\nwill not override another change that has been done since the original resource was fetched.\nIf the request cannot be fulfilled, the 412 (Precondition Failed) response is returned.\nWhen modifying a resource using POST or PUT, the If-Match header must be set to the value of\nthe resource ModTime property after which no lost update problem should occur.\nFor example, a client send a GET request to obtain a resource, which includes the ModTime property.\nThe ModTime indicates the last time the resource was created or modified. The client then sends\na POST or PUT request with the If-Match header set to the ModTime property of the resource as obtained\nin the GET request.",
								"key": "If-Match",
								"value": "<string>",
								"disabled": true
							},
							{
								"description": "For methods that apply server-side changes, If-None-Match used with the * value can be used to create\na resource not known to exist, guaranteeing that another resource creation didn't happen before,\nlosing the data of the previous put. The request will be processed only if the eventually existing\nresource's ETag doesn't match any of the values listed. Otherwise, the status code 412\n(Precondition Failed) is used.\nThe asterisk is a special value representing any resource. It is only useful when creating a resource,\nusually with PUT, to check if another resource with the identity has already been created before.\nThe comparison with the stored ETag uses the weak comparison algorithm, meaning two resources are\nconsidered identical if the content is equivalent - they don't have to be identical byte for byte.",
								"key": "If-None-Match",
								"value": "<string>",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"Enabled\": true,\n\t\"Name\": \"austin-ntp-policy-api\",\n\t\"Description\": \"NTP Policy for austin lab\",\n\t\"NtpServers\": [\n        \"172.16.1.90\",\n        \"172.16.1.91\"\n    ],\n\t\"Tags\":[\n        {\n            \"Key\": \"location\",\n            \"Value\": \"austin\"\n        }\n    ],\n    \"Timezone\": \"America/Chicago\",\n    \"Organization\": {\n        \"ObjectType\": \"organization.Organization\",\n        \"Moid\": \"{{org-moid}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{server}}/api/v1/ntp/Policies",
							"protocol": "https",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"ntp",
								"Policies"
							],
							"variable": [
								{
									"key": "server",
									"value": "{{server}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "The HTTP 200 status response code indicates that the request has succeeded and the 'ntp.Policy' resource was created as requested. The 'ntp.Policy' resource is created before this response is sent back and the resource is returned in the body of the messa",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "For methods that apply server-side changes, and in particular for PUT, If-Match can be used to prevent\nthe lost update problem. It can check if the modification of a resource that the user wants to upload\nwill not override another change that has been done since the original resource was fetched.\nIf the request cannot be fulfilled, the 412 (Precondition Failed) response is returned.\nWhen modifying a resource using POST or PUT, the If-Match header must be set to the value of\nthe resource ModTime property after which no lost update problem should occur.\nFor example, a client send a GET request to obtain a resource, which includes the ModTime property.\nThe ModTime indicates the last time the resource was created or modified. The client then sends\na POST or PUT request with the If-Match header set to the ModTime property of the resource as obtained\nin the GET request.",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "For methods that apply server-side changes, If-None-Match used with the * value can be used to create\na resource not known to exist, guaranteeing that another resource creation didn't happen before,\nlosing the data of the previous put. The request will be processed only if the eventually existing\nresource's ETag doesn't match any of the values listed. Otherwise, the status code 412\n(Precondition Failed) is used.\nThe asterisk is a special value representing any resource. It is only useful when creating a resource,\nusually with PUT, to check if another resource with the identity has already been created before.\nThe comparison with the stored ETag uses the weak comparison algorithm, meaning two resources are\nconsidered identical if the content is equivalent - they don't have to be identical byte for byte.",
										"key": "If-None-Match",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"AccountMoid\": \"officia fugiat sint est sit\",\n    \"ClassId\": \"cillum nostrud dolore\",\n    \"CreateTime\": \"nostrud commodo incididunt officia\",\n    \"DomainGroupMoid\": \"esse eu\",\n    \"ModTime\": \"elit voluptate nisi qui\",\n    \"Moid\": \"occaecat esse mollit tempor\",\n    \"ObjectType\": \"incididunt sunt reprehenderi\",\n    \"Owners\": [\n        \"deserunt labore tempor ut\",\n        \"dolor nisi sunt incididunt\"\n    ],\n    \"SharedScope\": \"deserunt dolore enim aliqua\",\n    \"Tags\": [\n        {\n            \"Key\": \"ulla\",\n            \"Value\": \"sint\"\n        },\n        {\n            \"Key\": \"ea n\",\n            \"Value\": \"aliq\"\n        }\n    ],\n    \"VersionContext\": {\n        \"ClassId\": \"Ut\",\n        \"ObjectType\": \"velit dolor dolore\",\n        \"InterestedMos\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"RefMo\": {},\n        \"Timestamp\": \"Lorem sed\",\n        \"Version\": \"nulla\",\n        \"VersionType\": \"Modified\"\n    },\n    \"Ancestors\": [\n        null,\n        null\n    ],\n    \"Parent\": null,\n    \"PermissionResources\": [\n        null,\n        null\n    ],\n    \"DisplayNames\": \"ex id\",\n    \"Description\": \"<string>\",\n    \"Name\": \"<string>\",\n    \"Enabled\": \"<boolean>\",\n    \"NtpServers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"Timezone\": \"Pacific/Niue\",\n    \"ApplianceAccount\": null,\n    \"Organization\": \"<null>\",\n    \"Profiles\": [\n        \"<null>\",\n        \"<null>\"\n    ]\n}"
								},
								"url": {
									"raw": "https://{{server}}/api/v1/ntp/Policies",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"ntp",
										"Policies"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Set-Cookie",
									"value": "X-Starship-Token=abcde12345; Path=/",
									"description": "Cookie authentication key for use with the `cookieAuth` apiKey authentication."
								},
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"AccountMoid\": \"officia fugiat sint est sit\",\n \"ClassId\": \"cillum nostrud dolore\",\n \"CreateTime\": \"nostrud commodo incididunt officia\",\n \"DomainGroupMoid\": \"esse eu\",\n \"ModTime\": \"elit voluptate nisi qui\",\n \"Moid\": \"occaecat esse mollit tempor\",\n \"ObjectType\": \"incididunt sunt reprehenderi\",\n \"Owners\": [\n  \"deserunt labore tempor ut\",\n  \"dolor nisi sunt incididunt\"\n ],\n \"SharedScope\": \"deserunt dolore enim aliqua\",\n \"Tags\": [\n  {\n   \"Key\": \"ulla\",\n   \"Value\": \"sint\"\n  },\n  {\n   \"Key\": \"ea n\",\n   \"Value\": \"aliq\"\n  }\n ],\n \"VersionContext\": {\n  \"ClassId\": \"Ut\",\n  \"ObjectType\": \"velit dolor dolore\",\n  \"InterestedMos\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ],\n  \"RefMo\": {},\n  \"Timestamp\": \"Lorem sed\",\n  \"Version\": \"nulla\",\n  \"VersionType\": \"Modified\"\n },\n \"Ancestors\": [\n  null,\n  null\n ],\n \"Parent\": null,\n \"PermissionResources\": [\n  null,\n  null\n ],\n \"DisplayNames\": \"ex id\",\n \"Description\": \"<string>\",\n \"Name\": \"<string>\",\n \"Enabled\": \"<boolean>\",\n \"NtpServers\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"Timezone\": \"Pacific/Niue\",\n \"ApplianceAccount\": null,\n \"Organization\": \"<null>\",\n \"Profiles\": [\n  \"<null>\",\n  \"<null>\"\n ]\n}"
						},
						{
							"name": "An unexpected error occurred.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "For methods that apply server-side changes, and in particular for PUT, If-Match can be used to prevent\nthe lost update problem. It can check if the modification of a resource that the user wants to upload\nwill not override another change that has been done since the original resource was fetched.\nIf the request cannot be fulfilled, the 412 (Precondition Failed) response is returned.\nWhen modifying a resource using POST or PUT, the If-Match header must be set to the value of\nthe resource ModTime property after which no lost update problem should occur.\nFor example, a client send a GET request to obtain a resource, which includes the ModTime property.\nThe ModTime indicates the last time the resource was created or modified. The client then sends\na POST or PUT request with the If-Match header set to the ModTime property of the resource as obtained\nin the GET request.",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "For methods that apply server-side changes, If-None-Match used with the * value can be used to create\na resource not known to exist, guaranteeing that another resource creation didn't happen before,\nlosing the data of the previous put. The request will be processed only if the eventually existing\nresource's ETag doesn't match any of the values listed. Otherwise, the status code 412\n(Precondition Failed) is used.\nThe asterisk is a special value representing any resource. It is only useful when creating a resource,\nusually with PUT, to check if another resource with the identity has already been created before.\nThe comparison with the stored ETag uses the weak comparison algorithm, meaning two resources are\nconsidered identical if the content is equivalent - they don't have to be identical byte for byte.",
										"key": "If-None-Match",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"AccountMoid\": \"officia fugiat sint est sit\",\n    \"ClassId\": \"cillum nostrud dolore\",\n    \"CreateTime\": \"nostrud commodo incididunt officia\",\n    \"DomainGroupMoid\": \"esse eu\",\n    \"ModTime\": \"elit voluptate nisi qui\",\n    \"Moid\": \"occaecat esse mollit tempor\",\n    \"ObjectType\": \"incididunt sunt reprehenderi\",\n    \"Owners\": [\n        \"deserunt labore tempor ut\",\n        \"dolor nisi sunt incididunt\"\n    ],\n    \"SharedScope\": \"deserunt dolore enim aliqua\",\n    \"Tags\": [\n        {\n            \"Key\": \"ulla\",\n            \"Value\": \"sint\"\n        },\n        {\n            \"Key\": \"ea n\",\n            \"Value\": \"aliq\"\n        }\n    ],\n    \"VersionContext\": {\n        \"ClassId\": \"Ut\",\n        \"ObjectType\": \"velit dolor dolore\",\n        \"InterestedMos\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"RefMo\": {},\n        \"Timestamp\": \"Lorem sed\",\n        \"Version\": \"nulla\",\n        \"VersionType\": \"Modified\"\n    },\n    \"Ancestors\": [\n        null,\n        null\n    ],\n    \"Parent\": null,\n    \"PermissionResources\": [\n        null,\n        null\n    ],\n    \"DisplayNames\": \"ex id\",\n    \"Description\": \"<string>\",\n    \"Name\": \"<string>\",\n    \"Enabled\": \"<boolean>\",\n    \"NtpServers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"Timezone\": \"Pacific/Niue\",\n    \"ApplianceAccount\": null,\n    \"Organization\": \"<null>\",\n    \"Profiles\": [\n        \"<null>\",\n        \"<null>\"\n    ]\n}"
								},
								"url": {
									"raw": "https://{{server}}/api/v1/ntp/Policies",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"ntp",
										"Policies"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "The request requires user authentication. The client may repeat the request with a suitable Authorization header field.\nIf the request already included Authorization credentials, then the 401 response indicates that authorization has\nbeen refused for thos",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "For methods that apply server-side changes, and in particular for PUT, If-Match can be used to prevent\nthe lost update problem. It can check if the modification of a resource that the user wants to upload\nwill not override another change that has been done since the original resource was fetched.\nIf the request cannot be fulfilled, the 412 (Precondition Failed) response is returned.\nWhen modifying a resource using POST or PUT, the If-Match header must be set to the value of\nthe resource ModTime property after which no lost update problem should occur.\nFor example, a client send a GET request to obtain a resource, which includes the ModTime property.\nThe ModTime indicates the last time the resource was created or modified. The client then sends\na POST or PUT request with the If-Match header set to the ModTime property of the resource as obtained\nin the GET request.",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "For methods that apply server-side changes, If-None-Match used with the * value can be used to create\na resource not known to exist, guaranteeing that another resource creation didn't happen before,\nlosing the data of the previous put. The request will be processed only if the eventually existing\nresource's ETag doesn't match any of the values listed. Otherwise, the status code 412\n(Precondition Failed) is used.\nThe asterisk is a special value representing any resource. It is only useful when creating a resource,\nusually with PUT, to check if another resource with the identity has already been created before.\nThe comparison with the stored ETag uses the weak comparison algorithm, meaning two resources are\nconsidered identical if the content is equivalent - they don't have to be identical byte for byte.",
										"key": "If-None-Match",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"AccountMoid\": \"officia fugiat sint est sit\",\n    \"ClassId\": \"cillum nostrud dolore\",\n    \"CreateTime\": \"nostrud commodo incididunt officia\",\n    \"DomainGroupMoid\": \"esse eu\",\n    \"ModTime\": \"elit voluptate nisi qui\",\n    \"Moid\": \"occaecat esse mollit tempor\",\n    \"ObjectType\": \"incididunt sunt reprehenderi\",\n    \"Owners\": [\n        \"deserunt labore tempor ut\",\n        \"dolor nisi sunt incididunt\"\n    ],\n    \"SharedScope\": \"deserunt dolore enim aliqua\",\n    \"Tags\": [\n        {\n            \"Key\": \"ulla\",\n            \"Value\": \"sint\"\n        },\n        {\n            \"Key\": \"ea n\",\n            \"Value\": \"aliq\"\n        }\n    ],\n    \"VersionContext\": {\n        \"ClassId\": \"Ut\",\n        \"ObjectType\": \"velit dolor dolore\",\n        \"InterestedMos\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"RefMo\": {},\n        \"Timestamp\": \"Lorem sed\",\n        \"Version\": \"nulla\",\n        \"VersionType\": \"Modified\"\n    },\n    \"Ancestors\": [\n        null,\n        null\n    ],\n    \"Parent\": null,\n    \"PermissionResources\": [\n        null,\n        null\n    ],\n    \"DisplayNames\": \"ex id\",\n    \"Description\": \"<string>\",\n    \"Name\": \"<string>\",\n    \"Enabled\": \"<boolean>\",\n    \"NtpServers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"Timezone\": \"Pacific/Niue\",\n    \"ApplianceAccount\": null,\n    \"Organization\": \"<null>\",\n    \"Profiles\": [\n        \"<null>\",\n        \"<null>\"\n    ]\n}"
								},
								"url": {
									"raw": "https://{{server}}/api/v1/ntp/Policies",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"ntp",
										"Policies"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "The specified resource was not found. The HTTP body contains a document that provides more details about the error.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "For methods that apply server-side changes, and in particular for PUT, If-Match can be used to prevent\nthe lost update problem. It can check if the modification of a resource that the user wants to upload\nwill not override another change that has been done since the original resource was fetched.\nIf the request cannot be fulfilled, the 412 (Precondition Failed) response is returned.\nWhen modifying a resource using POST or PUT, the If-Match header must be set to the value of\nthe resource ModTime property after which no lost update problem should occur.\nFor example, a client send a GET request to obtain a resource, which includes the ModTime property.\nThe ModTime indicates the last time the resource was created or modified. The client then sends\na POST or PUT request with the If-Match header set to the ModTime property of the resource as obtained\nin the GET request.",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "For methods that apply server-side changes, If-None-Match used with the * value can be used to create\na resource not known to exist, guaranteeing that another resource creation didn't happen before,\nlosing the data of the previous put. The request will be processed only if the eventually existing\nresource's ETag doesn't match any of the values listed. Otherwise, the status code 412\n(Precondition Failed) is used.\nThe asterisk is a special value representing any resource. It is only useful when creating a resource,\nusually with PUT, to check if another resource with the identity has already been created before.\nThe comparison with the stored ETag uses the weak comparison algorithm, meaning two resources are\nconsidered identical if the content is equivalent - they don't have to be identical byte for byte.",
										"key": "If-None-Match",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"AccountMoid\": \"officia fugiat sint est sit\",\n    \"ClassId\": \"cillum nostrud dolore\",\n    \"CreateTime\": \"nostrud commodo incididunt officia\",\n    \"DomainGroupMoid\": \"esse eu\",\n    \"ModTime\": \"elit voluptate nisi qui\",\n    \"Moid\": \"occaecat esse mollit tempor\",\n    \"ObjectType\": \"incididunt sunt reprehenderi\",\n    \"Owners\": [\n        \"deserunt labore tempor ut\",\n        \"dolor nisi sunt incididunt\"\n    ],\n    \"SharedScope\": \"deserunt dolore enim aliqua\",\n    \"Tags\": [\n        {\n            \"Key\": \"ulla\",\n            \"Value\": \"sint\"\n        },\n        {\n            \"Key\": \"ea n\",\n            \"Value\": \"aliq\"\n        }\n    ],\n    \"VersionContext\": {\n        \"ClassId\": \"Ut\",\n        \"ObjectType\": \"velit dolor dolore\",\n        \"InterestedMos\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"RefMo\": {},\n        \"Timestamp\": \"Lorem sed\",\n        \"Version\": \"nulla\",\n        \"VersionType\": \"Modified\"\n    },\n    \"Ancestors\": [\n        null,\n        null\n    ],\n    \"Parent\": null,\n    \"PermissionResources\": [\n        null,\n        null\n    ],\n    \"DisplayNames\": \"ex id\",\n    \"Description\": \"<string>\",\n    \"Name\": \"<string>\",\n    \"Enabled\": \"<boolean>\",\n    \"NtpServers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"Timezone\": \"Pacific/Niue\",\n    \"ApplianceAccount\": null,\n    \"Organization\": \"<null>\",\n    \"Profiles\": [\n        \"<null>\",\n        \"<null>\"\n    ]\n}"
								},
								"url": {
									"raw": "https://{{server}}/api/v1/ntp/Policies",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"ntp",
										"Policies"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "The HTTP 202 status response code indicates that the request has succeeded. The 'ntp.Policy' resource is asynchronously being created as requested.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "For methods that apply server-side changes, and in particular for PUT, If-Match can be used to prevent\nthe lost update problem. It can check if the modification of a resource that the user wants to upload\nwill not override another change that has been done since the original resource was fetched.\nIf the request cannot be fulfilled, the 412 (Precondition Failed) response is returned.\nWhen modifying a resource using POST or PUT, the If-Match header must be set to the value of\nthe resource ModTime property after which no lost update problem should occur.\nFor example, a client send a GET request to obtain a resource, which includes the ModTime property.\nThe ModTime indicates the last time the resource was created or modified. The client then sends\na POST or PUT request with the If-Match header set to the ModTime property of the resource as obtained\nin the GET request.",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "For methods that apply server-side changes, If-None-Match used with the * value can be used to create\na resource not known to exist, guaranteeing that another resource creation didn't happen before,\nlosing the data of the previous put. The request will be processed only if the eventually existing\nresource's ETag doesn't match any of the values listed. Otherwise, the status code 412\n(Precondition Failed) is used.\nThe asterisk is a special value representing any resource. It is only useful when creating a resource,\nusually with PUT, to check if another resource with the identity has already been created before.\nThe comparison with the stored ETag uses the weak comparison algorithm, meaning two resources are\nconsidered identical if the content is equivalent - they don't have to be identical byte for byte.",
										"key": "If-None-Match",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"AccountMoid\": \"officia fugiat sint est sit\",\n    \"ClassId\": \"cillum nostrud dolore\",\n    \"CreateTime\": \"nostrud commodo incididunt officia\",\n    \"DomainGroupMoid\": \"esse eu\",\n    \"ModTime\": \"elit voluptate nisi qui\",\n    \"Moid\": \"occaecat esse mollit tempor\",\n    \"ObjectType\": \"incididunt sunt reprehenderi\",\n    \"Owners\": [\n        \"deserunt labore tempor ut\",\n        \"dolor nisi sunt incididunt\"\n    ],\n    \"SharedScope\": \"deserunt dolore enim aliqua\",\n    \"Tags\": [\n        {\n            \"Key\": \"ulla\",\n            \"Value\": \"sint\"\n        },\n        {\n            \"Key\": \"ea n\",\n            \"Value\": \"aliq\"\n        }\n    ],\n    \"VersionContext\": {\n        \"ClassId\": \"Ut\",\n        \"ObjectType\": \"velit dolor dolore\",\n        \"InterestedMos\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"RefMo\": {},\n        \"Timestamp\": \"Lorem sed\",\n        \"Version\": \"nulla\",\n        \"VersionType\": \"Modified\"\n    },\n    \"Ancestors\": [\n        null,\n        null\n    ],\n    \"Parent\": null,\n    \"PermissionResources\": [\n        null,\n        null\n    ],\n    \"DisplayNames\": \"ex id\",\n    \"Description\": \"<string>\",\n    \"Name\": \"<string>\",\n    \"Enabled\": \"<boolean>\",\n    \"NtpServers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"Timezone\": \"Pacific/Niue\",\n    \"ApplianceAccount\": null,\n    \"Organization\": \"<null>\",\n    \"Profiles\": [\n        \"<null>\",\n        \"<null>\"\n    ]\n}"
								},
								"url": {
									"raw": "https://{{server}}/api/v1/ntp/Policies",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"ntp",
										"Policies"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Set-Cookie",
									"value": "X-Starship-Token=abcde12345; Path=/",
									"description": "Cookie authentication key for use with the `cookieAuth` apiKey authentication."
								},
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"AccountMoid\": \"officia fugiat sint est sit\",\n \"ClassId\": \"cillum nostrud dolore\",\n \"CreateTime\": \"nostrud commodo incididunt officia\",\n \"DomainGroupMoid\": \"esse eu\",\n \"ModTime\": \"elit voluptate nisi qui\",\n \"Moid\": \"occaecat esse mollit tempor\",\n \"ObjectType\": \"incididunt sunt reprehenderi\",\n \"Owners\": [\n  \"deserunt labore tempor ut\",\n  \"dolor nisi sunt incididunt\"\n ],\n \"SharedScope\": \"deserunt dolore enim aliqua\",\n \"Tags\": [\n  {\n   \"Key\": \"ulla\",\n   \"Value\": \"sint\"\n  },\n  {\n   \"Key\": \"ea n\",\n   \"Value\": \"aliq\"\n  }\n ],\n \"VersionContext\": {\n  \"ClassId\": \"Ut\",\n  \"ObjectType\": \"velit dolor dolore\",\n  \"InterestedMos\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ],\n  \"RefMo\": {},\n  \"Timestamp\": \"Lorem sed\",\n  \"Version\": \"nulla\",\n  \"VersionType\": \"Modified\"\n },\n \"Ancestors\": [\n  null,\n  null\n ],\n \"Parent\": null,\n \"PermissionResources\": [\n  null,\n  null\n ],\n \"DisplayNames\": \"ex id\",\n \"Description\": \"<string>\",\n \"Name\": \"<string>\",\n \"Enabled\": \"<boolean>\",\n \"NtpServers\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"Timezone\": \"Pacific/Niue\",\n \"ApplianceAccount\": null,\n \"Organization\": \"<null>\",\n \"Profiles\": [\n  \"<null>\",\n  \"<null>\"\n ]\n}"
						},
						{
							"name": "The request was properly authenticated, but the server is refusing to fulfill it.\nThe HTTP body may contain a document that provides more details about the error.\nFor example, the user may not have sufficient privileges to perform the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "For methods that apply server-side changes, and in particular for PUT, If-Match can be used to prevent\nthe lost update problem. It can check if the modification of a resource that the user wants to upload\nwill not override another change that has been done since the original resource was fetched.\nIf the request cannot be fulfilled, the 412 (Precondition Failed) response is returned.\nWhen modifying a resource using POST or PUT, the If-Match header must be set to the value of\nthe resource ModTime property after which no lost update problem should occur.\nFor example, a client send a GET request to obtain a resource, which includes the ModTime property.\nThe ModTime indicates the last time the resource was created or modified. The client then sends\na POST or PUT request with the If-Match header set to the ModTime property of the resource as obtained\nin the GET request.",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "For methods that apply server-side changes, If-None-Match used with the * value can be used to create\na resource not known to exist, guaranteeing that another resource creation didn't happen before,\nlosing the data of the previous put. The request will be processed only if the eventually existing\nresource's ETag doesn't match any of the values listed. Otherwise, the status code 412\n(Precondition Failed) is used.\nThe asterisk is a special value representing any resource. It is only useful when creating a resource,\nusually with PUT, to check if another resource with the identity has already been created before.\nThe comparison with the stored ETag uses the weak comparison algorithm, meaning two resources are\nconsidered identical if the content is equivalent - they don't have to be identical byte for byte.",
										"key": "If-None-Match",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"AccountMoid\": \"officia fugiat sint est sit\",\n    \"ClassId\": \"cillum nostrud dolore\",\n    \"CreateTime\": \"nostrud commodo incididunt officia\",\n    \"DomainGroupMoid\": \"esse eu\",\n    \"ModTime\": \"elit voluptate nisi qui\",\n    \"Moid\": \"occaecat esse mollit tempor\",\n    \"ObjectType\": \"incididunt sunt reprehenderi\",\n    \"Owners\": [\n        \"deserunt labore tempor ut\",\n        \"dolor nisi sunt incididunt\"\n    ],\n    \"SharedScope\": \"deserunt dolore enim aliqua\",\n    \"Tags\": [\n        {\n            \"Key\": \"ulla\",\n            \"Value\": \"sint\"\n        },\n        {\n            \"Key\": \"ea n\",\n            \"Value\": \"aliq\"\n        }\n    ],\n    \"VersionContext\": {\n        \"ClassId\": \"Ut\",\n        \"ObjectType\": \"velit dolor dolore\",\n        \"InterestedMos\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"RefMo\": {},\n        \"Timestamp\": \"Lorem sed\",\n        \"Version\": \"nulla\",\n        \"VersionType\": \"Modified\"\n    },\n    \"Ancestors\": [\n        null,\n        null\n    ],\n    \"Parent\": null,\n    \"PermissionResources\": [\n        null,\n        null\n    ],\n    \"DisplayNames\": \"ex id\",\n    \"Description\": \"<string>\",\n    \"Name\": \"<string>\",\n    \"Enabled\": \"<boolean>\",\n    \"NtpServers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"Timezone\": \"Pacific/Niue\",\n    \"ApplianceAccount\": null,\n    \"Organization\": \"<null>\",\n    \"Profiles\": [\n        \"<null>\",\n        \"<null>\"\n    ]\n}"
								},
								"url": {
									"raw": "https://{{server}}/api/v1/ntp/Policies",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"ntp",
										"Policies"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "The request could not be understood by the server due to malformed syntax.\nThe client SHOULD NOT repeat the request without modifications.\nFor example, the request may contain an incorrect JSON syntax, or the request fails\nvalidation checks.\nThe HTTP body",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "For methods that apply server-side changes, and in particular for PUT, If-Match can be used to prevent\nthe lost update problem. It can check if the modification of a resource that the user wants to upload\nwill not override another change that has been done since the original resource was fetched.\nIf the request cannot be fulfilled, the 412 (Precondition Failed) response is returned.\nWhen modifying a resource using POST or PUT, the If-Match header must be set to the value of\nthe resource ModTime property after which no lost update problem should occur.\nFor example, a client send a GET request to obtain a resource, which includes the ModTime property.\nThe ModTime indicates the last time the resource was created or modified. The client then sends\na POST or PUT request with the If-Match header set to the ModTime property of the resource as obtained\nin the GET request.",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "For methods that apply server-side changes, If-None-Match used with the * value can be used to create\na resource not known to exist, guaranteeing that another resource creation didn't happen before,\nlosing the data of the previous put. The request will be processed only if the eventually existing\nresource's ETag doesn't match any of the values listed. Otherwise, the status code 412\n(Precondition Failed) is used.\nThe asterisk is a special value representing any resource. It is only useful when creating a resource,\nusually with PUT, to check if another resource with the identity has already been created before.\nThe comparison with the stored ETag uses the weak comparison algorithm, meaning two resources are\nconsidered identical if the content is equivalent - they don't have to be identical byte for byte.",
										"key": "If-None-Match",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"AccountMoid\": \"officia fugiat sint est sit\",\n    \"ClassId\": \"cillum nostrud dolore\",\n    \"CreateTime\": \"nostrud commodo incididunt officia\",\n    \"DomainGroupMoid\": \"esse eu\",\n    \"ModTime\": \"elit voluptate nisi qui\",\n    \"Moid\": \"occaecat esse mollit tempor\",\n    \"ObjectType\": \"incididunt sunt reprehenderi\",\n    \"Owners\": [\n        \"deserunt labore tempor ut\",\n        \"dolor nisi sunt incididunt\"\n    ],\n    \"SharedScope\": \"deserunt dolore enim aliqua\",\n    \"Tags\": [\n        {\n            \"Key\": \"ulla\",\n            \"Value\": \"sint\"\n        },\n        {\n            \"Key\": \"ea n\",\n            \"Value\": \"aliq\"\n        }\n    ],\n    \"VersionContext\": {\n        \"ClassId\": \"Ut\",\n        \"ObjectType\": \"velit dolor dolore\",\n        \"InterestedMos\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"RefMo\": {},\n        \"Timestamp\": \"Lorem sed\",\n        \"Version\": \"nulla\",\n        \"VersionType\": \"Modified\"\n    },\n    \"Ancestors\": [\n        null,\n        null\n    ],\n    \"Parent\": null,\n    \"PermissionResources\": [\n        null,\n        null\n    ],\n    \"DisplayNames\": \"ex id\",\n    \"Description\": \"<string>\",\n    \"Name\": \"<string>\",\n    \"Enabled\": \"<boolean>\",\n    \"NtpServers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"Timezone\": \"Pacific/Niue\",\n    \"ApplianceAccount\": null,\n    \"Organization\": \"<null>\",\n    \"Profiles\": [\n        \"<null>\",\n        \"<null>\"\n    ]\n}"
								},
								"url": {
									"raw": "https://{{server}}/api/v1/ntp/Policies",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"ntp",
										"Policies"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						}
					]
				},
				{
					"name": "Get Service Profile By Tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (responseBody.length > 0) {",
									"  var jsonData = JSON.parse(responseBody);",
									"  var moids = [];",
									"  jsonData.Results.forEach(result => {",
									"      moids.push(result.Moid);",
									"  })",
									"  pm.collectionVariables.set('server-profile-moid', `${moids[0]}`);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{server}}/api/v1/server/Profiles?$filter=Tags/any(t:t/Key eq 'location' and t/Value eq 'austin')",
							"protocol": "https",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"server",
								"Profiles"
							],
							"query": [
								{
									"key": "$orderby",
									"value": "<string>",
									"description": "Determines what properties are used to sort the collection of resources.",
									"disabled": true
								},
								{
									"key": "$top",
									"value": "100",
									"description": "Specifies the maximum number of resources to return in the response.",
									"disabled": true
								},
								{
									"key": "$skip",
									"value": "0",
									"description": "Specifies the number of resources to skip in the response.",
									"disabled": true
								},
								{
									"key": "$select",
									"value": "Moid",
									"description": "Specifies a subset of properties to return.",
									"disabled": true
								},
								{
									"key": "$expand",
									"value": "ConfigResult",
									"description": "Specify additional attributes or related resources to return in addition to the primary resources.",
									"disabled": true
								},
								{
									"key": "$apply",
									"value": "<string>",
									"description": "Specify one or more transformation operations to perform aggregation on the resources. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent transformation.\nThe \"$apply\" query takes a sequence of set transformations, separated by forward slashes to express that they are\nconsecutively applied, i.e. the result of each transformation is the input to the next transformation.\nSupported aggregation methods are \"aggregate\" and \"groupby\".\nThe **aggregate** transformation takes a comma-separated list of one or more aggregate expressions as parameters and returns\na result set with a single instance, representing the aggregated value for all instances in the input set.\nThe **groupby** transformation takes one or two parameters and\n1. Splits the initial set into subsets where all instances in a subset have the same values for the grouping properties specified in the first parameter,\n2. Applies set transformations to each subset according to the second parameter, resulting in a new set of potentially different structure and cardinality,\n3. Ensures that the instances in the result set contain all grouping properties with the correct values for the group,\n4. Concatenates the intermediate result sets into one result set.\nA groupby transformation affects the structure of the result set.",
									"disabled": true
								},
								{
									"key": "$count",
									"value": "true",
									"description": "The $count query specifies the service should return the count of the matching resources, instead of returning the resources.",
									"disabled": true
								},
								{
									"key": "$inlinecount",
									"value": "allpages",
									"description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response.",
									"disabled": true
								},
								{
									"key": "at",
									"value": "<string>",
									"description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for resources to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.",
									"disabled": true
								},
								{
									"key": "tags",
									"value": "<string>",
									"description": "The 'tags' parameter is used to request a summary of the Tag utilization for this resource. When the 'tags' parameter is specified, the response provides a list of tag keys, the number of times the key has been used across all documents, and the tag values that have been assigned to the tag key.",
									"disabled": true
								},
								{
									"key": "$filter",
									"value": "Tags/any(t:t/Key eq 'location' and t/Value eq 'austin')"
								}
							]
						}
					},
					"response": [
						{
							"name": "The request could not be understood by the server due to malformed syntax.\nThe client SHOULD NOT repeat the request without modifications.\nFor example, the request may contain an incorrect JSON syntax, or the request fails\nvalidation checks.\nThe HTTP body",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/compute/RackUnits?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"compute",
										"RackUnits"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "The specified resource was not found. The HTTP body contains a document that provides more details about the error.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/compute/RackUnits?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"compute",
										"RackUnits"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "The request was properly authenticated, but the server is refusing to fulfill it.\nThe HTTP body may contain a document that provides more details about the error.\nFor example, the user may not have sufficient privileges to perform the request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/compute/RackUnits?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"compute",
										"RackUnits"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "An unexpected error occurred.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/compute/RackUnits?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"compute",
										"RackUnits"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "The request requires user authentication. The client may repeat the request with a suitable Authorization header field.\nIf the request already included Authorization credentials, then the 401 response indicates that authorization has\nbeen refused for thos",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/compute/RackUnits?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"compute",
										"RackUnits"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "List of 'compute.RackUnit' resources for the given filter criteria",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/compute/RackUnits?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"compute",
										"RackUnits"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Set-Cookie",
									"value": "X-Starship-Token=abcde12345; Path=/",
									"description": "Cookie authentication key for use with the `cookieAuth` apiKey authentication."
								},
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Disposition",
									"value": "<string>",
									"description": "If not present, indicates the response content is expected to be displayed inline in the browser, that is, as a Web page or as part of a Web page. If present, indicates the response content is expected to be an attachment, that is downloaded and saved locally."
								},
								{
									"key": "Content-Length",
									"value": "<integer>",
									"description": "Indicates the size of the entity-body, in bytes, sent to the recipient."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"ObjectType\": \"tempor sunt\",\n \"Count\": 71008981\n}"
						}
					]
				},
				{
					"name": "Get Service Profile Policy Items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{server}}/api/v1/search/SearchItems?$filter=IndexMotypes eq policy.AbstractPolicy and Profiles.Moid eq '{{server-profile-moid}}'",
							"protocol": "https",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"search",
								"SearchItems"
							],
							"query": [
								{
									"key": "$orderby",
									"value": "<string>",
									"description": "Determines what properties are used to sort the collection of resources.",
									"disabled": true
								},
								{
									"key": "$top",
									"value": "100",
									"description": "Specifies the maximum number of resources to return in the response.",
									"disabled": true
								},
								{
									"key": "$skip",
									"value": "0",
									"description": "Specifies the number of resources to skip in the response.",
									"disabled": true
								},
								{
									"key": "$expand",
									"value": "<string>",
									"description": "Specify additional attributes or related resources to return in addition to the primary resources.",
									"disabled": true
								},
								{
									"key": "$apply",
									"value": "<string>",
									"description": "Specify one or more transformation operations to perform aggregation on the resources. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent transformation.\nThe \"$apply\" query takes a sequence of set transformations, separated by forward slashes to express that they are\nconsecutively applied, i.e. the result of each transformation is the input to the next transformation.\nSupported aggregation methods are \"aggregate\" and \"groupby\".\nThe **aggregate** transformation takes a comma-separated list of one or more aggregate expressions as parameters and returns\na result set with a single instance, representing the aggregated value for all instances in the input set.\nThe **groupby** transformation takes one or two parameters and\n1. Splits the initial set into subsets where all instances in a subset have the same values for the grouping properties specified in the first parameter,\n2. Applies set transformations to each subset according to the second parameter, resulting in a new set of potentially different structure and cardinality,\n3. Ensures that the instances in the result set contain all grouping properties with the correct values for the group,\n4. Concatenates the intermediate result sets into one result set.\nA groupby transformation affects the structure of the result set.",
									"disabled": true
								},
								{
									"key": "$count",
									"value": "true",
									"description": "The $count query specifies the service should return the count of the matching resources, instead of returning the resources.",
									"disabled": true
								},
								{
									"key": "$inlinecount",
									"value": "allpages",
									"description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response.",
									"disabled": true
								},
								{
									"key": "at",
									"value": "<string>",
									"description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for resources to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.",
									"disabled": true
								},
								{
									"key": "tags",
									"value": "<string>",
									"description": "The 'tags' parameter is used to request a summary of the Tag utilization for this resource. When the 'tags' parameter is specified, the response provides a list of tag keys, the number of times the key has been used across all documents, and the tag values that have been assigned to the tag key.",
									"disabled": true
								},
								{
									"key": "$filter",
									"value": "IndexMotypes eq policy.AbstractPolicy and Profiles.Moid eq '{{server-profile-moid}}'"
								}
							]
						}
					},
					"response": [
						{
							"name": "An unexpected error occurred.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/compute/RackUnits?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"compute",
										"RackUnits"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "The request was properly authenticated, but the server is refusing to fulfill it.\nThe HTTP body may contain a document that provides more details about the error.\nFor example, the user may not have sufficient privileges to perform the request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/compute/RackUnits?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"compute",
										"RackUnits"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "List of 'compute.RackUnit' resources for the given filter criteria",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/compute/RackUnits?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"compute",
										"RackUnits"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Set-Cookie",
									"value": "X-Starship-Token=abcde12345; Path=/",
									"description": "Cookie authentication key for use with the `cookieAuth` apiKey authentication."
								},
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Disposition",
									"value": "<string>",
									"description": "If not present, indicates the response content is expected to be displayed inline in the browser, that is, as a Web page or as part of a Web page. If present, indicates the response content is expected to be an attachment, that is downloaded and saved locally."
								},
								{
									"key": "Content-Length",
									"value": "<integer>",
									"description": "Indicates the size of the entity-body, in bytes, sent to the recipient."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"ObjectType\": \"tempor sunt\",\n \"Count\": 71008981\n}"
						},
						{
							"name": "The request could not be understood by the server due to malformed syntax.\nThe client SHOULD NOT repeat the request without modifications.\nFor example, the request may contain an incorrect JSON syntax, or the request fails\nvalidation checks.\nThe HTTP body",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/compute/RackUnits?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"compute",
										"RackUnits"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "The specified resource was not found. The HTTP body contains a document that provides more details about the error.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/compute/RackUnits?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"compute",
										"RackUnits"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "The request requires user authentication. The client may repeat the request with a suitable Authorization header field.\nIf the request already included Authorization credentials, then the 401 response indicates that authorization has\nbeen refused for thos",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{server}}/api/v1/compute/RackUnits?$filter=&$orderby=<string>&$top=100&$skip=0&$select=&$expand=<string>&$apply=<string>&$count=<boolean>&$inlinecount=allpages&at=<string>&tags=<string>",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"compute",
										"RackUnits"
									],
									"query": [
										{
											"key": "$filter",
											"value": ""
										},
										{
											"key": "$orderby",
											"value": "<string>"
										},
										{
											"key": "$top",
											"value": "100"
										},
										{
											"key": "$skip",
											"value": "0"
										},
										{
											"key": "$select",
											"value": ""
										},
										{
											"key": "$expand",
											"value": "<string>"
										},
										{
											"key": "$apply",
											"value": "<string>"
										},
										{
											"key": "$count",
											"value": "<boolean>"
										},
										{
											"key": "$inlinecount",
											"value": "allpages"
										},
										{
											"key": "at",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						}
					]
				},
				{
					"name": "Update Service Profile with NTP Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "For methods that apply server-side changes, and in particular for PUT, If-Match can be used to prevent\nthe lost update problem. It can check if the modification of a resource that the user wants to upload\nwill not override another change that has been done since the original resource was fetched.\nIf the request cannot be fulfilled, the 412 (Precondition Failed) response is returned.\nWhen modifying a resource using POST or PUT, the If-Match header must be set to the value of\nthe resource ModTime property after which no lost update problem should occur.\nFor example, a client send a GET request to obtain a resource, which includes the ModTime property.\nThe ModTime indicates the last time the resource was created or modified. The client then sends\na POST or PUT request with the If-Match header set to the ModTime property of the resource as obtained\nin the GET request.",
								"key": "If-Match",
								"value": "<string>",
								"disabled": true
							},
							{
								"description": "For methods that apply server-side changes, If-None-Match used with the * value can be used to create\na resource not known to exist, guaranteeing that another resource creation didn't happen before,\nlosing the data of the previous put. The request will be processed only if the eventually existing\nresource's ETag doesn't match any of the values listed. Otherwise, the status code 412\n(Precondition Failed) is used.\nThe asterisk is a special value representing any resource. It is only useful when creating a resource,\nusually with PUT, to check if another resource with the identity has already been created before.\nThe comparison with the stored ETag uses the weak comparison algorithm, meaning two resources are\nconsidered identical if the content is equivalent - they don't have to be identical byte for byte.",
								"key": "If-None-Match",
								"value": "<string>",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"ObjectType\":\"server.Profile\",\n\t\t\"Moid\": \"{{server-profile-moid}}\"\n\t\t\n\t}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{server}}/api/v1/ntp/Policies/{{server-ntp-policy}}/Profiles",
							"protocol": "https",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"ntp",
								"Policies",
								"{{server-ntp-policy}}",
								"Profiles"
							]
						}
					},
					"response": [
						{
							"name": "The request was properly authenticated, but the server is refusing to fulfill it.\nThe HTTP body may contain a document that provides more details about the error.\nFor example, the user may not have sufficient privileges to perform the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "For methods that apply server-side changes, and in particular for PUT, If-Match can be used to prevent\nthe lost update problem. It can check if the modification of a resource that the user wants to upload\nwill not override another change that has been done since the original resource was fetched.\nIf the request cannot be fulfilled, the 412 (Precondition Failed) response is returned.\nWhen modifying a resource using POST or PUT, the If-Match header must be set to the value of\nthe resource ModTime property after which no lost update problem should occur.\nFor example, a client send a GET request to obtain a resource, which includes the ModTime property.\nThe ModTime indicates the last time the resource was created or modified. The client then sends\na POST or PUT request with the If-Match header set to the ModTime property of the resource as obtained\nin the GET request.",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "For methods that apply server-side changes, If-None-Match used with the * value can be used to create\na resource not known to exist, guaranteeing that another resource creation didn't happen before,\nlosing the data of the previous put. The request will be processed only if the eventually existing\nresource's ETag doesn't match any of the values listed. Otherwise, the status code 412\n(Precondition Failed) is used.\nThe asterisk is a special value representing any resource. It is only useful when creating a resource,\nusually with PUT, to check if another resource with the identity has already been created before.\nThe comparison with the stored ETag uses the weak comparison algorithm, meaning two resources are\nconsidered identical if the content is equivalent - they don't have to be identical byte for byte.",
										"key": "If-None-Match",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"AccountMoid\": \"officia fugiat sint est sit\",\n    \"ClassId\": \"cillum nostrud dolore\",\n    \"CreateTime\": \"nostrud commodo incididunt officia\",\n    \"DomainGroupMoid\": \"esse eu\",\n    \"ModTime\": \"elit voluptate nisi qui\",\n    \"Moid\": \"occaecat esse mollit tempor\",\n    \"ObjectType\": \"incididunt sunt reprehenderi\",\n    \"Owners\": [\n        \"deserunt labore tempor ut\",\n        \"dolor nisi sunt incididunt\"\n    ],\n    \"SharedScope\": \"deserunt dolore enim aliqua\",\n    \"Tags\": [\n        {\n            \"Key\": \"ulla\",\n            \"Value\": \"sint\"\n        },\n        {\n            \"Key\": \"ea n\",\n            \"Value\": \"aliq\"\n        }\n    ],\n    \"VersionContext\": {\n        \"ClassId\": \"Ut\",\n        \"ObjectType\": \"velit dolor dolore\",\n        \"InterestedMos\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"RefMo\": {},\n        \"Timestamp\": \"Lorem sed\",\n        \"Version\": \"nulla\",\n        \"VersionType\": \"Modified\"\n    },\n    \"Ancestors\": [\n        null,\n        null\n    ],\n    \"Parent\": null,\n    \"PermissionResources\": [\n        null,\n        null\n    ],\n    \"DisplayNames\": \"ex id\",\n    \"Description\": \"<string>\",\n    \"Name\": \"<string>\",\n    \"Enabled\": \"<boolean>\",\n    \"NtpServers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"Timezone\": \"Pacific/Niue\",\n    \"ApplianceAccount\": null,\n    \"Organization\": \"<null>\",\n    \"Profiles\": [\n        \"<null>\",\n        \"<null>\"\n    ]\n}"
								},
								"url": {
									"raw": "https://{{server}}/api/v1/ntp/Policies",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"ntp",
										"Policies"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "The HTTP 202 status response code indicates that the request has succeeded. The 'ntp.Policy' resource is asynchronously being created as requested.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "For methods that apply server-side changes, and in particular for PUT, If-Match can be used to prevent\nthe lost update problem. It can check if the modification of a resource that the user wants to upload\nwill not override another change that has been done since the original resource was fetched.\nIf the request cannot be fulfilled, the 412 (Precondition Failed) response is returned.\nWhen modifying a resource using POST or PUT, the If-Match header must be set to the value of\nthe resource ModTime property after which no lost update problem should occur.\nFor example, a client send a GET request to obtain a resource, which includes the ModTime property.\nThe ModTime indicates the last time the resource was created or modified. The client then sends\na POST or PUT request with the If-Match header set to the ModTime property of the resource as obtained\nin the GET request.",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "For methods that apply server-side changes, If-None-Match used with the * value can be used to create\na resource not known to exist, guaranteeing that another resource creation didn't happen before,\nlosing the data of the previous put. The request will be processed only if the eventually existing\nresource's ETag doesn't match any of the values listed. Otherwise, the status code 412\n(Precondition Failed) is used.\nThe asterisk is a special value representing any resource. It is only useful when creating a resource,\nusually with PUT, to check if another resource with the identity has already been created before.\nThe comparison with the stored ETag uses the weak comparison algorithm, meaning two resources are\nconsidered identical if the content is equivalent - they don't have to be identical byte for byte.",
										"key": "If-None-Match",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"AccountMoid\": \"officia fugiat sint est sit\",\n    \"ClassId\": \"cillum nostrud dolore\",\n    \"CreateTime\": \"nostrud commodo incididunt officia\",\n    \"DomainGroupMoid\": \"esse eu\",\n    \"ModTime\": \"elit voluptate nisi qui\",\n    \"Moid\": \"occaecat esse mollit tempor\",\n    \"ObjectType\": \"incididunt sunt reprehenderi\",\n    \"Owners\": [\n        \"deserunt labore tempor ut\",\n        \"dolor nisi sunt incididunt\"\n    ],\n    \"SharedScope\": \"deserunt dolore enim aliqua\",\n    \"Tags\": [\n        {\n            \"Key\": \"ulla\",\n            \"Value\": \"sint\"\n        },\n        {\n            \"Key\": \"ea n\",\n            \"Value\": \"aliq\"\n        }\n    ],\n    \"VersionContext\": {\n        \"ClassId\": \"Ut\",\n        \"ObjectType\": \"velit dolor dolore\",\n        \"InterestedMos\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"RefMo\": {},\n        \"Timestamp\": \"Lorem sed\",\n        \"Version\": \"nulla\",\n        \"VersionType\": \"Modified\"\n    },\n    \"Ancestors\": [\n        null,\n        null\n    ],\n    \"Parent\": null,\n    \"PermissionResources\": [\n        null,\n        null\n    ],\n    \"DisplayNames\": \"ex id\",\n    \"Description\": \"<string>\",\n    \"Name\": \"<string>\",\n    \"Enabled\": \"<boolean>\",\n    \"NtpServers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"Timezone\": \"Pacific/Niue\",\n    \"ApplianceAccount\": null,\n    \"Organization\": \"<null>\",\n    \"Profiles\": [\n        \"<null>\",\n        \"<null>\"\n    ]\n}"
								},
								"url": {
									"raw": "https://{{server}}/api/v1/ntp/Policies",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"ntp",
										"Policies"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Set-Cookie",
									"value": "X-Starship-Token=abcde12345; Path=/",
									"description": "Cookie authentication key for use with the `cookieAuth` apiKey authentication."
								},
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"AccountMoid\": \"officia fugiat sint est sit\",\n \"ClassId\": \"cillum nostrud dolore\",\n \"CreateTime\": \"nostrud commodo incididunt officia\",\n \"DomainGroupMoid\": \"esse eu\",\n \"ModTime\": \"elit voluptate nisi qui\",\n \"Moid\": \"occaecat esse mollit tempor\",\n \"ObjectType\": \"incididunt sunt reprehenderi\",\n \"Owners\": [\n  \"deserunt labore tempor ut\",\n  \"dolor nisi sunt incididunt\"\n ],\n \"SharedScope\": \"deserunt dolore enim aliqua\",\n \"Tags\": [\n  {\n   \"Key\": \"ulla\",\n   \"Value\": \"sint\"\n  },\n  {\n   \"Key\": \"ea n\",\n   \"Value\": \"aliq\"\n  }\n ],\n \"VersionContext\": {\n  \"ClassId\": \"Ut\",\n  \"ObjectType\": \"velit dolor dolore\",\n  \"InterestedMos\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ],\n  \"RefMo\": {},\n  \"Timestamp\": \"Lorem sed\",\n  \"Version\": \"nulla\",\n  \"VersionType\": \"Modified\"\n },\n \"Ancestors\": [\n  null,\n  null\n ],\n \"Parent\": null,\n \"PermissionResources\": [\n  null,\n  null\n ],\n \"DisplayNames\": \"ex id\",\n \"Description\": \"<string>\",\n \"Name\": \"<string>\",\n \"Enabled\": \"<boolean>\",\n \"NtpServers\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"Timezone\": \"Pacific/Niue\",\n \"ApplianceAccount\": null,\n \"Organization\": \"<null>\",\n \"Profiles\": [\n  \"<null>\",\n  \"<null>\"\n ]\n}"
						},
						{
							"name": "The specified resource was not found. The HTTP body contains a document that provides more details about the error.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "For methods that apply server-side changes, and in particular for PUT, If-Match can be used to prevent\nthe lost update problem. It can check if the modification of a resource that the user wants to upload\nwill not override another change that has been done since the original resource was fetched.\nIf the request cannot be fulfilled, the 412 (Precondition Failed) response is returned.\nWhen modifying a resource using POST or PUT, the If-Match header must be set to the value of\nthe resource ModTime property after which no lost update problem should occur.\nFor example, a client send a GET request to obtain a resource, which includes the ModTime property.\nThe ModTime indicates the last time the resource was created or modified. The client then sends\na POST or PUT request with the If-Match header set to the ModTime property of the resource as obtained\nin the GET request.",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "For methods that apply server-side changes, If-None-Match used with the * value can be used to create\na resource not known to exist, guaranteeing that another resource creation didn't happen before,\nlosing the data of the previous put. The request will be processed only if the eventually existing\nresource's ETag doesn't match any of the values listed. Otherwise, the status code 412\n(Precondition Failed) is used.\nThe asterisk is a special value representing any resource. It is only useful when creating a resource,\nusually with PUT, to check if another resource with the identity has already been created before.\nThe comparison with the stored ETag uses the weak comparison algorithm, meaning two resources are\nconsidered identical if the content is equivalent - they don't have to be identical byte for byte.",
										"key": "If-None-Match",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"AccountMoid\": \"officia fugiat sint est sit\",\n    \"ClassId\": \"cillum nostrud dolore\",\n    \"CreateTime\": \"nostrud commodo incididunt officia\",\n    \"DomainGroupMoid\": \"esse eu\",\n    \"ModTime\": \"elit voluptate nisi qui\",\n    \"Moid\": \"occaecat esse mollit tempor\",\n    \"ObjectType\": \"incididunt sunt reprehenderi\",\n    \"Owners\": [\n        \"deserunt labore tempor ut\",\n        \"dolor nisi sunt incididunt\"\n    ],\n    \"SharedScope\": \"deserunt dolore enim aliqua\",\n    \"Tags\": [\n        {\n            \"Key\": \"ulla\",\n            \"Value\": \"sint\"\n        },\n        {\n            \"Key\": \"ea n\",\n            \"Value\": \"aliq\"\n        }\n    ],\n    \"VersionContext\": {\n        \"ClassId\": \"Ut\",\n        \"ObjectType\": \"velit dolor dolore\",\n        \"InterestedMos\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"RefMo\": {},\n        \"Timestamp\": \"Lorem sed\",\n        \"Version\": \"nulla\",\n        \"VersionType\": \"Modified\"\n    },\n    \"Ancestors\": [\n        null,\n        null\n    ],\n    \"Parent\": null,\n    \"PermissionResources\": [\n        null,\n        null\n    ],\n    \"DisplayNames\": \"ex id\",\n    \"Description\": \"<string>\",\n    \"Name\": \"<string>\",\n    \"Enabled\": \"<boolean>\",\n    \"NtpServers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"Timezone\": \"Pacific/Niue\",\n    \"ApplianceAccount\": null,\n    \"Organization\": \"<null>\",\n    \"Profiles\": [\n        \"<null>\",\n        \"<null>\"\n    ]\n}"
								},
								"url": {
									"raw": "https://{{server}}/api/v1/ntp/Policies",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"ntp",
										"Policies"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "The request requires user authentication. The client may repeat the request with a suitable Authorization header field.\nIf the request already included Authorization credentials, then the 401 response indicates that authorization has\nbeen refused for thos",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "For methods that apply server-side changes, and in particular for PUT, If-Match can be used to prevent\nthe lost update problem. It can check if the modification of a resource that the user wants to upload\nwill not override another change that has been done since the original resource was fetched.\nIf the request cannot be fulfilled, the 412 (Precondition Failed) response is returned.\nWhen modifying a resource using POST or PUT, the If-Match header must be set to the value of\nthe resource ModTime property after which no lost update problem should occur.\nFor example, a client send a GET request to obtain a resource, which includes the ModTime property.\nThe ModTime indicates the last time the resource was created or modified. The client then sends\na POST or PUT request with the If-Match header set to the ModTime property of the resource as obtained\nin the GET request.",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "For methods that apply server-side changes, If-None-Match used with the * value can be used to create\na resource not known to exist, guaranteeing that another resource creation didn't happen before,\nlosing the data of the previous put. The request will be processed only if the eventually existing\nresource's ETag doesn't match any of the values listed. Otherwise, the status code 412\n(Precondition Failed) is used.\nThe asterisk is a special value representing any resource. It is only useful when creating a resource,\nusually with PUT, to check if another resource with the identity has already been created before.\nThe comparison with the stored ETag uses the weak comparison algorithm, meaning two resources are\nconsidered identical if the content is equivalent - they don't have to be identical byte for byte.",
										"key": "If-None-Match",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"AccountMoid\": \"officia fugiat sint est sit\",\n    \"ClassId\": \"cillum nostrud dolore\",\n    \"CreateTime\": \"nostrud commodo incididunt officia\",\n    \"DomainGroupMoid\": \"esse eu\",\n    \"ModTime\": \"elit voluptate nisi qui\",\n    \"Moid\": \"occaecat esse mollit tempor\",\n    \"ObjectType\": \"incididunt sunt reprehenderi\",\n    \"Owners\": [\n        \"deserunt labore tempor ut\",\n        \"dolor nisi sunt incididunt\"\n    ],\n    \"SharedScope\": \"deserunt dolore enim aliqua\",\n    \"Tags\": [\n        {\n            \"Key\": \"ulla\",\n            \"Value\": \"sint\"\n        },\n        {\n            \"Key\": \"ea n\",\n            \"Value\": \"aliq\"\n        }\n    ],\n    \"VersionContext\": {\n        \"ClassId\": \"Ut\",\n        \"ObjectType\": \"velit dolor dolore\",\n        \"InterestedMos\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"RefMo\": {},\n        \"Timestamp\": \"Lorem sed\",\n        \"Version\": \"nulla\",\n        \"VersionType\": \"Modified\"\n    },\n    \"Ancestors\": [\n        null,\n        null\n    ],\n    \"Parent\": null,\n    \"PermissionResources\": [\n        null,\n        null\n    ],\n    \"DisplayNames\": \"ex id\",\n    \"Description\": \"<string>\",\n    \"Name\": \"<string>\",\n    \"Enabled\": \"<boolean>\",\n    \"NtpServers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"Timezone\": \"Pacific/Niue\",\n    \"ApplianceAccount\": null,\n    \"Organization\": \"<null>\",\n    \"Profiles\": [\n        \"<null>\",\n        \"<null>\"\n    ]\n}"
								},
								"url": {
									"raw": "https://{{server}}/api/v1/ntp/Policies",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"ntp",
										"Policies"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "An unexpected error occurred.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "For methods that apply server-side changes, and in particular for PUT, If-Match can be used to prevent\nthe lost update problem. It can check if the modification of a resource that the user wants to upload\nwill not override another change that has been done since the original resource was fetched.\nIf the request cannot be fulfilled, the 412 (Precondition Failed) response is returned.\nWhen modifying a resource using POST or PUT, the If-Match header must be set to the value of\nthe resource ModTime property after which no lost update problem should occur.\nFor example, a client send a GET request to obtain a resource, which includes the ModTime property.\nThe ModTime indicates the last time the resource was created or modified. The client then sends\na POST or PUT request with the If-Match header set to the ModTime property of the resource as obtained\nin the GET request.",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "For methods that apply server-side changes, If-None-Match used with the * value can be used to create\na resource not known to exist, guaranteeing that another resource creation didn't happen before,\nlosing the data of the previous put. The request will be processed only if the eventually existing\nresource's ETag doesn't match any of the values listed. Otherwise, the status code 412\n(Precondition Failed) is used.\nThe asterisk is a special value representing any resource. It is only useful when creating a resource,\nusually with PUT, to check if another resource with the identity has already been created before.\nThe comparison with the stored ETag uses the weak comparison algorithm, meaning two resources are\nconsidered identical if the content is equivalent - they don't have to be identical byte for byte.",
										"key": "If-None-Match",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"AccountMoid\": \"officia fugiat sint est sit\",\n    \"ClassId\": \"cillum nostrud dolore\",\n    \"CreateTime\": \"nostrud commodo incididunt officia\",\n    \"DomainGroupMoid\": \"esse eu\",\n    \"ModTime\": \"elit voluptate nisi qui\",\n    \"Moid\": \"occaecat esse mollit tempor\",\n    \"ObjectType\": \"incididunt sunt reprehenderi\",\n    \"Owners\": [\n        \"deserunt labore tempor ut\",\n        \"dolor nisi sunt incididunt\"\n    ],\n    \"SharedScope\": \"deserunt dolore enim aliqua\",\n    \"Tags\": [\n        {\n            \"Key\": \"ulla\",\n            \"Value\": \"sint\"\n        },\n        {\n            \"Key\": \"ea n\",\n            \"Value\": \"aliq\"\n        }\n    ],\n    \"VersionContext\": {\n        \"ClassId\": \"Ut\",\n        \"ObjectType\": \"velit dolor dolore\",\n        \"InterestedMos\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"RefMo\": {},\n        \"Timestamp\": \"Lorem sed\",\n        \"Version\": \"nulla\",\n        \"VersionType\": \"Modified\"\n    },\n    \"Ancestors\": [\n        null,\n        null\n    ],\n    \"Parent\": null,\n    \"PermissionResources\": [\n        null,\n        null\n    ],\n    \"DisplayNames\": \"ex id\",\n    \"Description\": \"<string>\",\n    \"Name\": \"<string>\",\n    \"Enabled\": \"<boolean>\",\n    \"NtpServers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"Timezone\": \"Pacific/Niue\",\n    \"ApplianceAccount\": null,\n    \"Organization\": \"<null>\",\n    \"Profiles\": [\n        \"<null>\",\n        \"<null>\"\n    ]\n}"
								},
								"url": {
									"raw": "https://{{server}}/api/v1/ntp/Policies",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"ntp",
										"Policies"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "The request could not be understood by the server due to malformed syntax.\nThe client SHOULD NOT repeat the request without modifications.\nFor example, the request may contain an incorrect JSON syntax, or the request fails\nvalidation checks.\nThe HTTP body",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "For methods that apply server-side changes, and in particular for PUT, If-Match can be used to prevent\nthe lost update problem. It can check if the modification of a resource that the user wants to upload\nwill not override another change that has been done since the original resource was fetched.\nIf the request cannot be fulfilled, the 412 (Precondition Failed) response is returned.\nWhen modifying a resource using POST or PUT, the If-Match header must be set to the value of\nthe resource ModTime property after which no lost update problem should occur.\nFor example, a client send a GET request to obtain a resource, which includes the ModTime property.\nThe ModTime indicates the last time the resource was created or modified. The client then sends\na POST or PUT request with the If-Match header set to the ModTime property of the resource as obtained\nin the GET request.",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "For methods that apply server-side changes, If-None-Match used with the * value can be used to create\na resource not known to exist, guaranteeing that another resource creation didn't happen before,\nlosing the data of the previous put. The request will be processed only if the eventually existing\nresource's ETag doesn't match any of the values listed. Otherwise, the status code 412\n(Precondition Failed) is used.\nThe asterisk is a special value representing any resource. It is only useful when creating a resource,\nusually with PUT, to check if another resource with the identity has already been created before.\nThe comparison with the stored ETag uses the weak comparison algorithm, meaning two resources are\nconsidered identical if the content is equivalent - they don't have to be identical byte for byte.",
										"key": "If-None-Match",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"AccountMoid\": \"officia fugiat sint est sit\",\n    \"ClassId\": \"cillum nostrud dolore\",\n    \"CreateTime\": \"nostrud commodo incididunt officia\",\n    \"DomainGroupMoid\": \"esse eu\",\n    \"ModTime\": \"elit voluptate nisi qui\",\n    \"Moid\": \"occaecat esse mollit tempor\",\n    \"ObjectType\": \"incididunt sunt reprehenderi\",\n    \"Owners\": [\n        \"deserunt labore tempor ut\",\n        \"dolor nisi sunt incididunt\"\n    ],\n    \"SharedScope\": \"deserunt dolore enim aliqua\",\n    \"Tags\": [\n        {\n            \"Key\": \"ulla\",\n            \"Value\": \"sint\"\n        },\n        {\n            \"Key\": \"ea n\",\n            \"Value\": \"aliq\"\n        }\n    ],\n    \"VersionContext\": {\n        \"ClassId\": \"Ut\",\n        \"ObjectType\": \"velit dolor dolore\",\n        \"InterestedMos\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"RefMo\": {},\n        \"Timestamp\": \"Lorem sed\",\n        \"Version\": \"nulla\",\n        \"VersionType\": \"Modified\"\n    },\n    \"Ancestors\": [\n        null,\n        null\n    ],\n    \"Parent\": null,\n    \"PermissionResources\": [\n        null,\n        null\n    ],\n    \"DisplayNames\": \"ex id\",\n    \"Description\": \"<string>\",\n    \"Name\": \"<string>\",\n    \"Enabled\": \"<boolean>\",\n    \"NtpServers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"Timezone\": \"Pacific/Niue\",\n    \"ApplianceAccount\": null,\n    \"Organization\": \"<null>\",\n    \"Profiles\": [\n        \"<null>\",\n        \"<null>\"\n    ]\n}"
								},
								"url": {
									"raw": "https://{{server}}/api/v1/ntp/Policies",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"ntp",
										"Policies"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"AuthenticationFailure\",\n \"message\": \"deserunt sint\",\n \"messageId\": \"Duis dolore mollit\",\n \"cause\": {\n  \"code\": \"InvalidUrl\",\n  \"message\": \"ad sed occaecat\",\n  \"messageId\": \"in ad\",\n  \"cause\": {\n   \"value\": \"<Circular reference to #/components/schemas/Error detected>\"\n  }\n }\n}"
						},
						{
							"name": "The HTTP 200 status response code indicates that the request has succeeded and the 'ntp.Policy' resource was created as requested. The 'ntp.Policy' resource is created before this response is sent back and the resource is returned in the body of the messa",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "For methods that apply server-side changes, and in particular for PUT, If-Match can be used to prevent\nthe lost update problem. It can check if the modification of a resource that the user wants to upload\nwill not override another change that has been done since the original resource was fetched.\nIf the request cannot be fulfilled, the 412 (Precondition Failed) response is returned.\nWhen modifying a resource using POST or PUT, the If-Match header must be set to the value of\nthe resource ModTime property after which no lost update problem should occur.\nFor example, a client send a GET request to obtain a resource, which includes the ModTime property.\nThe ModTime indicates the last time the resource was created or modified. The client then sends\na POST or PUT request with the If-Match header set to the ModTime property of the resource as obtained\nin the GET request.",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "For methods that apply server-side changes, If-None-Match used with the * value can be used to create\na resource not known to exist, guaranteeing that another resource creation didn't happen before,\nlosing the data of the previous put. The request will be processed only if the eventually existing\nresource's ETag doesn't match any of the values listed. Otherwise, the status code 412\n(Precondition Failed) is used.\nThe asterisk is a special value representing any resource. It is only useful when creating a resource,\nusually with PUT, to check if another resource with the identity has already been created before.\nThe comparison with the stored ETag uses the weak comparison algorithm, meaning two resources are\nconsidered identical if the content is equivalent - they don't have to be identical byte for byte.",
										"key": "If-None-Match",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"AccountMoid\": \"officia fugiat sint est sit\",\n    \"ClassId\": \"cillum nostrud dolore\",\n    \"CreateTime\": \"nostrud commodo incididunt officia\",\n    \"DomainGroupMoid\": \"esse eu\",\n    \"ModTime\": \"elit voluptate nisi qui\",\n    \"Moid\": \"occaecat esse mollit tempor\",\n    \"ObjectType\": \"incididunt sunt reprehenderi\",\n    \"Owners\": [\n        \"deserunt labore tempor ut\",\n        \"dolor nisi sunt incididunt\"\n    ],\n    \"SharedScope\": \"deserunt dolore enim aliqua\",\n    \"Tags\": [\n        {\n            \"Key\": \"ulla\",\n            \"Value\": \"sint\"\n        },\n        {\n            \"Key\": \"ea n\",\n            \"Value\": \"aliq\"\n        }\n    ],\n    \"VersionContext\": {\n        \"ClassId\": \"Ut\",\n        \"ObjectType\": \"velit dolor dolore\",\n        \"InterestedMos\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"RefMo\": {},\n        \"Timestamp\": \"Lorem sed\",\n        \"Version\": \"nulla\",\n        \"VersionType\": \"Modified\"\n    },\n    \"Ancestors\": [\n        null,\n        null\n    ],\n    \"Parent\": null,\n    \"PermissionResources\": [\n        null,\n        null\n    ],\n    \"DisplayNames\": \"ex id\",\n    \"Description\": \"<string>\",\n    \"Name\": \"<string>\",\n    \"Enabled\": \"<boolean>\",\n    \"NtpServers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"Timezone\": \"Pacific/Niue\",\n    \"ApplianceAccount\": null,\n    \"Organization\": \"<null>\",\n    \"Profiles\": [\n        \"<null>\",\n        \"<null>\"\n    ]\n}"
								},
								"url": {
									"raw": "https://{{server}}/api/v1/ntp/Policies",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"ntp",
										"Policies"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Set-Cookie",
									"value": "X-Starship-Token=abcde12345; Path=/",
									"description": "Cookie authentication key for use with the `cookieAuth` apiKey authentication."
								},
								{
									"key": "x-starship-traceid",
									"value": "<string>",
									"description": "A value that uniquely identifies a HTTP request and its response."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"AccountMoid\": \"officia fugiat sint est sit\",\n \"ClassId\": \"cillum nostrud dolore\",\n \"CreateTime\": \"nostrud commodo incididunt officia\",\n \"DomainGroupMoid\": \"esse eu\",\n \"ModTime\": \"elit voluptate nisi qui\",\n \"Moid\": \"occaecat esse mollit tempor\",\n \"ObjectType\": \"incididunt sunt reprehenderi\",\n \"Owners\": [\n  \"deserunt labore tempor ut\",\n  \"dolor nisi sunt incididunt\"\n ],\n \"SharedScope\": \"deserunt dolore enim aliqua\",\n \"Tags\": [\n  {\n   \"Key\": \"ulla\",\n   \"Value\": \"sint\"\n  },\n  {\n   \"Key\": \"ea n\",\n   \"Value\": \"aliq\"\n  }\n ],\n \"VersionContext\": {\n  \"ClassId\": \"Ut\",\n  \"ObjectType\": \"velit dolor dolore\",\n  \"InterestedMos\": [\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  ],\n  \"RefMo\": {},\n  \"Timestamp\": \"Lorem sed\",\n  \"Version\": \"nulla\",\n  \"VersionType\": \"Modified\"\n },\n \"Ancestors\": [\n  null,\n  null\n ],\n \"Parent\": null,\n \"PermissionResources\": [\n  null,\n  null\n ],\n \"DisplayNames\": \"ex id\",\n \"Description\": \"<string>\",\n \"Name\": \"<string>\",\n \"Enabled\": \"<boolean>\",\n \"NtpServers\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"Timezone\": \"Pacific/Niue\",\n \"ApplianceAccount\": null,\n \"Organization\": \"<null>\",\n \"Profiles\": [\n  \"<null>\",\n  \"<null>\"\n ]\n}"
						}
					]
				},
				{
					"name": "Deploy Server Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"Action\": \"Deploy\"\n}\n"
						},
						"url": {
							"raw": "https://{{server}}/api/v1/server/Profiles/{{server-profile-moid}}",
							"protocol": "https",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"server",
								"Profiles",
								"{{server-profile-moid}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Ntp Cleanup",
			"item": [
				{
					"name": "Remove NTP Policy from Profile",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"ObjectType\":\"server.Profile\",\n\t\t\"Moid\": \"{{server-profile-moid}}\"\n\t\t\n\t}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{server}}/api/v1/ntp/Policies/{{server-ntp-policy}}/Profiles",
							"protocol": "https",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"ntp",
								"Policies",
								"{{server-ntp-policy}}",
								"Profiles"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Turn on Server Locator LED",
			"item": [
				{
					"name": "Get Rack Server By Serial",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (responseBody.length > 0) {",
									" var jsonData = JSON.parse(responseBody);",
									" var moids = [];",
									" jsonData.Results.forEach(result => {",
									"    moids.push(result.Moid);",
									" })",
									" pm.collectionVariables.set('server-moid', `${moids[0]}`);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{server}}/api/v1/compute/RackUnits?$filter=Serial eq CHANGEME&$expand=LocatorLed($select=OperState)",
							"protocol": "https",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"compute",
								"RackUnits"
							],
							"query": [
								{
									"key": "$filter",
									"value": "Serial eq CHANGEME"
								},
								{
									"key": "$expand",
									"value": "LocatorLed($select=OperState)"
								},
								{
									"key": "$count",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Server Settings By Server Moid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (responseBody.length > 0) {",
									" var jsonData = JSON.parse(responseBody);",
									" var moids = [];",
									" jsonData.Results.forEach(result => {",
									"    moids.push(result.Moid);",
									" })",
									" pm.collectionVariables.set('settings-moid', `${moids[0]}`);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{server}}/api/v1/compute/ServerSettings?$filter=Server.Moid eq '{{server-moid}}'",
							"protocol": "https",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"compute",
								"ServerSettings"
							],
							"query": [
								{
									"key": "$filter",
									"value": "Server.Moid eq '{{server-moid}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Turn on Locator LED",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"AdminLocatorLedState\": \"On\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{server}}/api/v1/compute/ServerSettings/{{settings-moid}}",
							"protocol": "https",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"compute",
								"ServerSettings",
								"{{settings-moid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Rack Server",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{server}}/api/v1/compute/RackUnits?$filter=Serial eq CHANGEME&$expand=LocatorLed($select=OperState)",
							"protocol": "https",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"compute",
								"RackUnits"
							],
							"query": [
								{
									"key": "$filter",
									"value": "Serial eq CHANGEME"
								},
								{
									"key": "$expand",
									"value": "LocatorLed($select=OperState)"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Contract Status",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}/api/v1/asset/DeviceContractInformations",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"path": [
						"api",
						"v1",
						"asset",
						"DeviceContractInformations"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"function doHttpSig() {",
					"",
					"    var navigator = {}; //fake a navigator object for the lib",
					"    var window    = {}; //fake a window object for the lib",
					"    ",
					"    eval(pm.collectionVariables.get(\"jsrsasign-js\")); //import javascript jsrsasign",
					"    ",
					"    ",
					"    function computeHttpSignature(config, headerHash) {",
					"      console.log(\"inside computeHttpSignature\");",
					"      var template = 'keyId=\"${keyId}\",algorithm=\"${algorithm}\",headers=\"${headers}\",signature=\"${signature}\"',",
					"          sig = template;",
					"    ",
					"      // compute sig here",
					"      var signingBase = '';",
					"      config.headers.forEach(function(h){",
					"        if (signingBase !== '') { signingBase += '\\n'; }",
					"        signingBase += h.toLowerCase() + \": \" + headerHash[h];",
					"      });",
					"  ",
					"      // Verify PEM Pre-Encapsulation Boundary",
					"      let re = /\\s*-----BEGIN (.*)-----\\s+/;",
					"      let m = config.secretkey.match(re);",
					"      if (!m) {",
					"        throw \"Not a valid PEM pre boundary\";",
					"      }",
					"",
					"      pem_header = m[1];",
					"      console.log(pem_header)",
					"      if (pem_header == \"RSA PRIVATE KEY\") {",
					"        kjursig = new KJUR.crypto.Signature({\"alg\": \"SHA256withRSA\"});",
					"      } else if (pem_header == \"EC PRIVATE KEY\") {",
					"        config.secretkey = config.secretkey.replace(pem_header, 'PRIVATE KEY');",
					"        kjursig = new KJUR.crypto.Signature({\"alg\": \"SHA256withECDSA\"});",
					"      } else {",
					"        throw `Unsupported key: ${pem_header}`;",
					"      }",
					"      kjursig.init(config.secretkey);",
					"      kjursig.updateString(signingBase);",
					"      var hash = kjursig.sign();",
					"      console.log(hash);",
					"    ",
					"      var signatureOptions = {",
					"            keyId : config.keyId,",
					"            algorithm: config.algorithm,",
					"            headers: config.headers,",
					"            signature : hextob64(hash)",
					"          };",
					"    ",
					"      // build sig string here",
					"      Object.keys(signatureOptions).forEach(function(key) {",
					"        var pattern = \"${\" + key + \"}\",",
					"            value = (typeof signatureOptions[key] != 'string') ? signatureOptions[key].join(' ') : signatureOptions[key];",
					"        sig = sig.replace(pattern, value);",
					"      });",
					"      return sig;",
					"    }",
					"",
					"    // Resolve all the Postman variables that are part of the request or URI",
					"    let sdk = require('postman-collection');",
					"    let newRequest = new sdk.Request(pm.request.toJSON());",
					"    let resolvedRequest = newRequest.toObjectResolved(",
					"        null, [pm.variables.toObject()], { ignoreOwnVariables: true }",
					"        );",
					"    ",
					"    console.log(\"Resolved Request:\");",
					"    console.log(resolvedRequest);",
					"    ",
					"    var body = \"\";",
					"    if (",
					"        request.method.toLowerCase() == \"get\" ||",
					"        request.method.toLowerCase() == \"delete\" ) {",
					"        body=\"\";",
					"    } else {",
					"        body=resolvedRequest.body.raw;",
					"    }",
					"",
					"    var computedDigest = 'SHA-256=' + CryptoJS.enc.Base64.stringify(CryptoJS.SHA256(body));",
					"    console.log(\"computedDigest:\");",
					"    console.log(computedDigest);",
					"    ",
					"    var curDate = new Date().toGMTString();",
					"    var targetUrl = \"/\" + resolvedRequest.url.path.join(\"/\");",
					"    var host = resolvedRequest.url.host.join(\".\");",
					"    ",
					"    // Process Query String",
					"    console.log(\"Query String:\");",
					"    var queryString  = \"\";",
					"    var paramCount = 0;",
					"    pm.request.url.query.all().forEach( (param) => {",
					"        // Append each URL encoded parameter to the targetUrl",
					"        // However unencode Commas (,), Colons (:), Dollar Signs (:)",
					"        // and Forward Slashes (/)",
					"        if (!param.disabled) {",
					"            if (paramCount > 0) {",
					"                queryString += '&';",
					"            }",
					"            paramCount++;",
					"            // Append each URL encoded parameter to the targetUrl unencode ",
					"            // 24 $ Dollar Sign",
					"            // 28 ( Left Parenthesis ",
					"            // 29 ) Right Parenthesis",
					"            // 2B + Plus Sign",
					"            // 2C , Comma",
					"            // 2F / Forward Slash",
					"            // 3A : Colon",
					"            // 3D = Equals Sign",
					"            // 40 @ At Sign",
					"            //",
					"",
					"            // Replace any variables within params with COLLECTION variable",
					"            let paramValue = param.value;",
					"            let replaceVars = paramValue.match(/\\{\\{[\\w\\-]+\\}\\}/g);",
					"            if(replaceVars) {",
					"                replaceVars.forEach(replaceVar => {",
					"                    paramValue = paramValue.replace(replaceVar, pm.collectionVariables.get(replaceVar.replace('{{', '').replace('}}', '')));",
					"                })",
					"            }",
					"            ",
					"            queryString += (",
					"                param.key + \"=\" +",
					"                encodeURIComponent(paramValue).",
					"                replace(/['()=]/g, escape).",
					"                replace(/%(?:24|28|29|2B|2C|2F|3A|3D|40)/g, unescape)",
					"            );",
					"        }",
					"    });",
					"    console.log(queryString);",
					"    // console.log(pm.collectionVariables.get(''))",
					"    ",
					"    if (queryString.length > 0) {",
					"        queryStringTmp = queryString.replace(\"%25\",\"%\")",
					"        targetUrl += \"?\" + queryStringTmp;",
					"        console.log(\"Target Url: \" + targetUrl );",
					"    }",
					"    ",
					"    var headerHash = {",
					"          date : curDate,",
					"          digest : computedDigest,",
					"          host : host,",
					"          '(request-target)' : request.method.toLowerCase() + ' ' + targetUrl",
					"        };",
					"    ",
					"    console.log(headerHash);",
					"    ",
					"    var configHash = {",
					"          algorithm : 'hs2019',",
					"          keyId : environment['api-key'],",
					"          secretkey : environment['secret-key'],",
					"          headers : [ '(request-target)', 'date', 'digest', 'host' ]",
					"        };",
					"    var sig = computeHttpSignature(configHash, headerHash);",
					"    console.log(sig);",
					"    pm.collectionVariables.set('httpsig', sig);",
					"    pm.collectionVariables.set('computed-digest', computedDigest);",
					"    pm.collectionVariables.set(\"current-date\", curDate);",
					"    pm.collectionVariables.set(\"target-url\", targetUrl);",
					"    pm.request.headers.add({",
					"        key: 'Accept',",
					"        value: 'application/json'",
					"    });",
					"    pm.request.headers.add({",
					"        key: 'Accept',",
					"        value: 'application/json'",
					"    });",
					"    pm.request.headers.add({",
					"        key: 'Authorization',",
					"        value: `Signature ${sig}`",
					"    });",
					"    pm.request.headers.add({",
					"        key: 'Digest',",
					"        value: computedDigest",
					"    });",
					"    pm.request.headers.add({",
					"        key: 'Date',",
					"        value: curDate",
					"    });",
					"    pm.request.headers.add({",
					"        key: 'Content-Type',",
					"        value: 'application/json'",
					"    });",
					"}",
					"",
					"if (pm.collectionVariables.get('jsrsasign-js') === undefined || pm.collectionVariables.get('jsrsasign-js') == \"\") {",
					"    console.log(\"jsrasign library not already downloaded. Downloading now. \");",
					"    ",
					"    pm.sendRequest({",
					"        url: \"http://kjur.github.io/jsrsasign/jsrsasign-latest-all-min.js\",",
					"        method: \"GET\",",
					"        body: {}",
					"    }, function (err, res) {",
					"        console.log(res.text());",
					"        pm.collectionVariables.set(\"jsrsasign-js\", res.text());",
					"        doHttpSig();",
					"    });",
					"    ",
					"} else {",
					"    console.log(\"Do doHttpSig\")",
					"    doHttpSig();",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "fc7a06ef-2899-47fe-8769-1639837f615a",
			"key": "server",
			"value": "intersight.com"
		},
		{
			"id": "10688c48-ec0c-4705-b6cf-0a46284eed71",
			"key": "jsrsasign-js",
			"value": ""
		},
		{
			"id": "3b933ee0-808a-43e0-9571-c5794a866c63",
			"key": "httpsig",
			"value": ""
		},
		{
			"id": "d2d01320-e663-4b68-8405-635940e853d9",
			"key": "computed-digest",
			"value": ""
		},
		{
			"id": "0fa93915-5605-4d24-936d-4fb50fc10b8b",
			"key": "current-date",
			"value": ""
		},
		{
			"id": "fd056a57-a46b-4f97-91b0-54397f8295c0",
			"key": "target-url",
			"value": ""
		}
	]
}